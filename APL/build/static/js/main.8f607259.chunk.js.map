{"version":3,"sources":["views/functions.js","UserContext.js","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/Grid/GridItem.js","CustomComponents/VsButton.js","CustomComponents/VsCancel.js","assets/globalStyles.js","CustomComponents/CustomComponents.js","views/SuperUser/Tournament.js","views/SuperUser/Player.js","views/SuperUser/Team.js","views/globals.js","views/SuperUser/Match.js","CustomComponents/CricDreamTabs.js","views/Login/SignIn.js","views/Login/SignUp.js","views/APL/Welcome.js","views/Login/ResetPassword.js","views/Login/ForgotPassword.js","views/Wallet/Wallet.js","App.js","index.js"],"names":["crypto","require","yesterday","moment","subtract","disablePastDt","current","isAfter","cdRefresh","window","location","reload","validateSpecialCharacters","sss","sts","includes","validateMobile","length","isNaN","validateEmail","xxx","split","validateUpi","NumberString","validateInteger","match","encrypt","text","hash","cipher","createCipheriv","process","Buffer","from","concat","update","final","toString","err","console","log","getImageName","teamName","imageName","replaceAll","currentAPLVersion","parseFloat","latestAPLVersion","a","version","axios","get","response","data","upGradeRequired","upGrade","status","upGradeRecord","latest","internalToText","downloadApk","myURL","method","url","responseType","myFile","download","clearBackupData","localStorage","removeItem","isMobile","test","navigator","userAgent","checkIdle","sessionStorage","getItem","setIdle","idle","setItem","CR","String","fromCharCode","LF","SP","IntCR","IntLF","IntSP","txt","txt1","x","join","getMaster","key","value","getMinimumBalance","parseInt","UserContext","createContext","hexToRgb","input","replace","Error","first","second","last","toUpperCase","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","primaryBoxShadow","boxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","title","background","margin","paddingTop","borderTop","height","fontFamily","fontWeight","lineHeight","color","textDecoration","marginTop","marginBottom","minHeight","cardStyle","card","border","borderRadius","width","position","display","flexDirection","minWidth","wordWrap","fontSize","cardPlain","cardProfile","textAlign","cardChart","makeStyles","styles","cardBodyStyle","cardBody","padding","flex","WebkitBoxFlex","cardBodyPlain","paddingLeft","paddingRight","cardBodyProfile","grid","disabled","VsButton","props","bSTyle","backgroundColor","handler","yellow","onClick","align","style","name","VsCancel","myDisabled","IconButton","size","globalStyles","theme","green","deepOrange","blue","bgRed","root","drawerPaper","whiteSpace","spacing","paddingBottom","typography","pxToRem","fontWeightBold","vgSpacing","boxStyle","select","patientName","patientInfo","marginLeft","patientInfo2","patientInfo999","marginRight","selectForm","selectEmpty","selectLabel","link","webPage","signInWelcome","borderWidth","borderColor","borderStyle","form","submit","page","yesNoTitle","yesNoNormalMessage","yesNoErrorMessage","red","paper","alignItems","heading","flexBasis","flexShrink","secondaryHeading","palette","secondary","message18","message16","message14","message12","message10","button","error","nonerror","th","td","upArrowCardCategory","stats","top","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","modalContainer","content","opacity","modalTitle","modalMessage","modalbutton","jumpButton","jumpButtonFull","noSpace","show","hide","useStyles","avatar","main","groupName","balance","successMessage","failureMessage","table","ngHeader","fontWeightRegular","ngCard","divider","BlankArea","React","Component","NothingToDisplay","ValidComp","ValidatorForm","addValidationRule","p1","removeValidationRule","DisplayGroupName","classes","Typography","className","DisplayPageHeader","msg","tournament","component","variant","headerName","tdPending","allAppt","info","header","messageText","symbolText","SU_Tournament","useState","isDrawerOpened","setIsDrawerOpened","tournamentName","setTournamentName","tournamentList","setTournamentList","tournamentType","setTournamentType","tournamentDesc","setTournamentDesc","tournamentData","gClasses","alert","useAlert","getAllTournament","resp","useEffect","t","desc","type","tmpArray","sortBy","filter","push","count","success","DisplayTournamentList","Box","TableContainer","Table","TableHead","TableRow","TableCell","scope","colSpan","TableBody","map","index","myClass","apptName","href","JSON","stringify","setTab","handleTeam","handleMatch","handleEdit","handleCancel","Container","maxWidth","CssBaseline","Drawer","drawer","anchor","open","onSubmit","Grid","container","justify","item","xs","sm","md","lg","fullWidth","required","label","onChange","event","target","validators","errorMessages","Select","labelId","id","MenuItem","Team","setTeamName","newPlayer","setNewPlayer","playerList","setPlayerList","allPlayerList","setAllPlayerList","selPlayerName","setSelPlayerName","pid","setPid","playerName","setPlayerName","role","setRole","battingStyle","setBattingStyle","bowlingStyle","setBowlingStyle","setTeamData","getTeamPlayers","myTeam","getAllPlayers","tRec","parse","e","handlePlayerSelect","newName","clone","newTeamList","tmp","find","setRegisterStatus","setNewTeamList","DisplayPlayerList","Avatar","src","medium","ppid","myPlayer","newTeamName","setNewTeamName","teamList","setTeamList","getAllTeams","tName","DisplayTeamList","handlePlayer","HOURSTR","MINUTESTR","DATESTR","MONTHNUMBERSTR","dateTimeNormal","dateTimeBlock","Match","matchList","setMatchList","mid","setMid","team1","setTeam1","team2","setTeam2","Date","startDate","setStartDate","startTime","setStartTime","getAllMatches","matchStartTime","myDate","getFullYear","getMonth","getDate","getHours","getMinutes","getTime","DisplayMatchList","ttt","myTime","inputProps","timeFormat","initialValue","dateFormat","isValidDate","onClose","d","toDate","flexGrow","noSpacing","menuButton","icon","statButton","teamButton","dashButton","new","whatIsNew","avatar1","getContrastText","num","CricDreamTabs","useHistory","auth","anchorEl","setAnchorEl","Boolean","grpAnchorEl","setValue","pathname","handleClose","setMenuValue","DisplayCdItems","AppBar","Toolbar","aria-label","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","Button","android","downloadButon","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","buttonLeft","left","buttonRight1","right","buttonRight2","dlm","dlm2","oContainer","justifyContent","oImage","oText1","oText2","textData","wallet","bonus","hist","createBrowserHistory","AppRouter","user","setUser","useMemo","DispayTabs","ipos","REACT_APP_BASEPOS","initCdParams","pathArray","toLowerCase","checkJoinGroup","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","requestPermission","then","getToken","token","catch","history","Provider","options","positions","TOP_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","App","document","getElementById"],"mappings":"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","file":"static/js/main.8f607259.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport download from 'js-file-download';\r\nimport LinearProgressWithLabel from '@material-ui/core/LinearProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CircularProgressWithLabel from '@material-ui/core/LinearProgress';\r\nimport { func } from \"prop-types\";\r\nimport moment from 'moment';\r\n\r\nvar crypto = require(\"crypto\");\r\nvar ifscsystem = require('ifsc-finder');\r\nvar aadhar = require('aadhaar-validator')\r\n\r\n// disable future dates\r\nconst today = moment();\r\nconst yesterday = moment().subtract(1, 'day');\r\n\r\nexport function disablePastDt(current) {\r\n  return current.isAfter(yesterday);\r\n};\r\n\r\nexport function cdRefresh() {\r\n  window.location.reload();\r\n}\r\n\r\nexport function cdCurrent() {\r\n  return String.fromCharCode(169);\r\n}\r\n\r\nexport function cdDefault() {\r\n  return String.fromCharCode(9745);\r\n}\r\n\r\nexport function validateSpecialCharacters(sss) {\r\n    var sts = false;\r\n    const TerroristCharacters = [];\r\n\r\n    if (!sss.includes(\"\\\"\"))\r\n    if (!sss.includes(\"\\'\"))\r\n    if (!sss.includes(\"\\`\"))\r\n    if (!sss.includes(\"\\\\\"))\r\n    if (!sss.includes(\"/\"))\r\n    if (!sss.includes(\"~\"))\r\n    if (!sss.includes(\"\\%\"))\r\n    if (!sss.includes(\"^\"))\r\n    if (!sss.includes(\"\\&\"))\r\n    if (!sss.includes(\"\\+\"))\r\n      sts = true;\r\n    return sts;\r\n}\r\n\r\nexport function validateMobile(sss) {\r\n  var sts = false;\r\n  const TerroristCharacters = [];\r\n\r\n  if (sss.length === 10)\r\n  if (!sss.includes(\"\\.\"))\r\n  if (!sss.includes(\"\\-\"))\r\n  if (!sss.includes(\"\\+\"))\r\n  if (!sss.includes(\"\\*\"))\r\n  if (!sss.includes(\"\\/\"))\r\n  if (!sss.includes(\"e\"))\r\n  if (!sss.includes(\"E\"))\r\n  if (!isNaN(sss))\r\n    sts = true;\r\n  return sts;\r\n}\r\n\r\nexport function validateEmail(sss) {\r\n    let sts = false;\r\n    if (validateSpecialCharacters(sss)) {\r\n      let xxx = sss.split(\"@\");\r\n      if (xxx.length === 2) {\r\n        if (xxx[1].includes(\".\")) \r\n          sts = true;\r\n      }\r\n    }\r\n    return sts;\r\n}\r\n\r\nexport function validateUpi(sss) {\r\n  let sts = false;\r\n  if (validateSpecialCharacters(sss)) {\r\n    let xxx = sss.split(\"@\");\r\n    if (xxx.length === 2) {\r\n        sts = true;\r\n    }\r\n  }\r\n  return sts;\r\n}\r\n\r\n\r\nconst NumberString = /^[0-9]+$/;\r\nexport function validateInteger(sss) {\r\n  let sts = sss.match(NumberString);\r\n  return sts;\r\n}\r\n\r\n\r\nexport function hasGroup() {\r\n  //console.log(`current gis is ${localStorage.getItem(\"gid\")}`)\r\n  var sts = false;\r\n    if (localStorage.getItem(\"gid\") !== null) \r\n    if (localStorage.getItem(\"gid\") !== \"\") \r\n    if (localStorage.getItem(\"gid\") !== \"0\")\r\n      sts = true;\r\n  return sts;\r\n}\r\n\r\nexport function encrypt(text) {\r\n  let hash=\"\";\r\n  try {\r\n    const cipher = crypto.createCipheriv(process.env.REACT_APP_ALGORITHM, \r\n      process.env.REACT_APP_AKSHUSECRETKEY, \r\n      Buffer.from(process.env.REACT_APP_IV, 'hex'));\r\n    const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\r\n    hash = encrypted.toString('hex');\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  } \r\n  return hash;\r\n};\r\n\r\nexport function decrypt(hash) {\r\n  const decipher = crypto.createDecipheriv(process.env.REACT_APP_ALGORITHM, \r\n    process.env.REACT_APP_AKSHUSECRETKEY, \r\n    Buffer.from(process.env.REACT_APP_IV, 'hex'));\r\n  const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash, 'hex')), decipher.final()]);\r\n  return decrpyted.toString();\r\n};\r\n\r\nconst AMPM = [\r\n  \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\",\r\n  \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\"\r\n];\r\n  /**\r\n * @param {Date} d The date\r\n */\r\nconst TZ_IST={hours: 5, minutes: 30};\r\nexport function cricDate(d) {\r\n  var xxx = new Date(d.getTime());\r\n  xxx.setHours(xxx.getHours()+TZ_IST.hours);\r\n  xxx.setMinutes(xxx.getMinutes()+TZ_IST.minutes);\r\n  var myHour = xxx.getHours();\r\n  var myampm = AMPM[myHour];\r\n  if (myHour > 12) myHour -= 12;\r\n  var tmp = `${MONTHNAME[xxx.getMonth()]} ${(\"0\" + xxx.getDate()).slice(-2)} ${(\"0\" + myHour).slice(-2)}:${(\"0\" +  xxx.getMinutes()).slice(-2)}${myampm}`\r\n  return tmp;\r\n}\r\n\r\nconst notToConvert = ['XI', 'ARUN']\r\n/**\r\n * @param {string} t The date\r\n */\r\n\r\nexport function cricTeamName(t) {\r\n  var tmp = t.split(' ');\r\n  for(i=0; i < tmp.length; ++i)  {\r\n    var x = tmp[i].trim().toUpperCase();\r\n    if (notToConvert.includes(x))\r\n      tmp[i] = x;\r\n    else\r\n      tmp[i] = x.substr(0, 1) + x.substr(1, x.length - 1).toLowerCase();\r\n  }\r\n  return tmp.join(' ');\r\n}\r\n\r\nvar prizeDetails = [];\r\n\r\nasync function getPrizeDetails() {\r\n  // console.log(\"Checking length\");\r\n  try {\r\n    // console.log(\"reading proze details from database\")\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/prize/data`);\r\n    prizeDetails = response.data;\r\n  } catch(err)  {\r\n    console.log(\"---------prize detail error\");\r\n    console.log(err);\r\n  }\r\n} \r\n\r\nasync function getSinglePrizeDetails(count) {\r\n  // console.log(\"Checking length\");\r\n  let myPrize;\r\n  try {\r\n    // console.log(\"reading proze details from database\")\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/prize/prizecount/${count}`);\r\n    myPrize = response.data;\r\n  } catch(err)  {\r\n    console.log(\"---------prize detail error\");\r\n    console.log(err);\r\n  }\r\n  return myPrize;\r\n} \r\n\r\nasync function getPrizePortion() {\r\n  let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/prize/getprizeportion`);\r\n  //console.log(\"resp\", resp.data);\r\n  let prizePortion = resp.data.prizePortion / 100;\r\n  //console.log(\"prize portion\", prizePortion);\r\n  return prizePortion;\r\n\r\n}\r\n\r\nexport async function getPrizeTable(prizeCount, prizeAmount) {\r\n  \r\n  let prizePortion = await getPrizePortion();\r\n  let myPrize = await getSinglePrizeDetails(prizeCount);  //prizeDetails.find(x => x.prizeCount == prizeCount);\r\n  // we will keep 5% of amount\r\n  // rest (i.e. 95%) will be distributed among prize winners\r\n  let totPrize = Math.floor(prizeAmount*prizePortion);\r\n  let allotPrize = 0;\r\n  let prizeTable=[]\r\n  let i = 0;\r\n  for(i=1; i<prizeCount; ++i) {\r\n    let thisPrize = Math.floor(totPrize*myPrize[\"prize\"+i.toString()]/100);\r\n    prizeTable.push({rank: i, prize: thisPrize})\r\n    allotPrize += thisPrize;\r\n  }\r\n  prizeTable.push({rank: prizeCount, prize: totPrize-allotPrize});\r\n  return prizeTable;\r\n}\r\n\r\nasync function getSinglePrize(prizeCount) {\r\n  // console.log(\"Checking length\");\r\n  let myPrize;\r\n  if (prizeDetails.length > 0) return;\r\n  try {\r\n    // console.log(\"reading proze details from database\")\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/prize/prizecount/${prizeCount}`);\r\n    myPrize = response.data;\r\n  } catch(err)  {\r\n    console.log(\"---------prize detail error\");\r\n    console.log(err);\r\n  }\r\n  return myPrize;\r\n} \r\n\r\nexport async function getSinglePrizeTable(prizeCount, prizeAmount) {\r\n  let prizePortion = await getPrizePortion();\r\n  //console.log(prizePortion)\r\n  let myPrize = await getSinglePrize(prizeCount);\r\n  //console.log(myPrize);\r\n\r\n  let totPrize = Math.floor(prizeAmount*prizePortion)\r\n  // console.log(\"Total prize\", totPrize);\r\n  let allotPrize = 0;\r\n  let prizeTable=[]\r\n  let i = 0;\r\n  for(i=1; i<prizeCount; ++i) {\r\n    let thisPrize = Math.floor(totPrize*myPrize[\"prize\"+i.toString()]/100);\r\n    prizeTable.push({rank: i, prize: thisPrize})\r\n    allotPrize += thisPrize;\r\n  }\r\n  prizeTable.push({rank: prizeCount, prize: totPrize-allotPrize});\r\n  return prizeTable;\r\n}\r\n\r\nexport async function getAllPrizeTable(prizeAmount) {\r\n  let allTable = [];\r\n  for(let i=1; i<=5; ++i) {\r\n    let tmp = await getSinglePrizeTable(i, prizeAmount);\r\n    allTable.push(tmp);\r\n  }\r\n  return (allTable);\r\n}\r\n\r\n\r\nexport async function getUserBalance() {\r\n  let myBalance = {wallet: 0, bonus: 0};\r\n  try {\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/wallet/balance/${localStorage.getItem(\"uid\")}`);\r\n    myBalance = response.data;\r\n  } catch(err) {\r\n    console.log(e);\r\n  }\r\n  return myBalance;\r\n}\r\n\r\nexport async function feebreakup(memberfee, bonusAvailable) {\r\n  try {\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/wallet/feebreakup/${memberfee}`);\r\n    // console.log(response.data);\r\n    let fee = response.data;\r\n    if (fee.bonus > bonusAvailable) {\r\n      fee.bonus = bonusAvailable;\r\n      fee.wallet = memberfee - bonusAvailable;\r\n    }\r\n    fee[\"done\"] = true;\r\n    return fee;\r\n  } catch(err) {\r\n    console.log(e);\r\n    return {done: false};\r\n  }\r\n}\r\n\r\nexport async function groupfeebreakup(groupCode, bonusAvailable) {\r\n  try {\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/wallet/groupfeebreakup/${groupCode}`);\r\n    // console.log(response.data);\r\n    let fee = response.data;\r\n    if (fee.bonus > bonusAvailable) {\r\n      fee.bonus = bonusAvailable;\r\n      fee.wallet = memberfee - bonusAvailable;\r\n    }\r\n    fee[\"done\"] = true;\r\n    return fee;\r\n  } catch(err) {\r\n    console.log(e);\r\n    return  {done: false};\r\n  }\r\n\r\n}\r\n\r\nexport function specialSetPos() {\r\n  //console.log(`in SSP: ${localStorage.getItem(\"joinGroupCode\")}`)\r\n  let retval = parseInt(process.env.REACT_APP_DASHBOARD);  //parseInt(process.env.REACT_APP_GROUP);\r\n  if (localStorage.getItem(\"joinGroupCode\").length > 0)\r\n    retval = parseInt(process.env.REACT_APP_JOINGROUP);\r\n  //console.log(`in SSP: ${retval}`)\r\n  return retval;\r\n}\r\n\r\nexport function getImageName(teamName) {\r\n  let imageName = `${process.env.PUBLIC_URL}/teamimage/${teamName}.JPG`;\r\n  imageName = imageName.replaceAll(\" \", \"\");\r\n  // imageName = imageName.replace(/ /g, \" \");\r\n  //console.log(\"Function Image name\", imageName);\r\n  return imageName;\r\n}\r\n\r\nexport function currentAPLVersion() {\r\n  return(parseFloat(process.env.REACT_APP_VERSION));\r\n}\r\n\r\nexport async function latestAPLVersion()  {\r\n  let version = 0.1;\r\n  try {\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/latestversion`);\r\n    // console.log(response);\r\n    // let tmp = response.data;\r\n    version = parseFloat(response.data);\r\n  } catch(err) {\r\n    version = 0.1;\r\n  }\r\n  return version;\r\n}\r\n\r\nexport async function upGradeRequired() {\r\n  let upGrade = false;\r\n  let upGradeRecord;\r\n  if (process.env.REACT_APP_DEVICE === \"APK\") {\r\n    let myName = process.env.REACT_APP_NAME;\r\n    let myVersion = process.env.REACT_APP_VERSION;\r\n    let myURL = `${process.env.REACT_APP_APLAXIOS}/apl/confirmlatest/${myName}/APK/${myVersion}`;\r\n    // console.log(myURL);\r\n    let response = await axios.get(myURL);\r\n    // console.log(\"After axios call\", response.data);\r\n    upGrade = (response.data.status) ? false : true;\r\n    upGradeRecord = response.data.latest;\r\n    upGradeRecord.text = internalToText(upGradeRecord.text);\r\n    // console.log(upGradeRecord);\r\n  } else if (process.env.REACT_APP_DEVICE === \"IOS\") {\r\n\t\tconsole.log(\"IOS currently not supported\");\r\n\t}\r\n\t\r\n  console.log(`upgrade required: ${upGrade}`);\r\n  return ({status: upGrade, latest: upGradeRecord});\r\n}\r\n\r\n\r\nexport async function org_downloadApk() {\r\n  let myName = process.env.REACT_APP_NAME;\r\n  let myURL = `${process.env.REACT_APP_APLAXIOS}/apl/downloadlatestbinary/${myName}/APK/`;\r\n  try {\r\n    axios({\r\n      method: 'get',\r\n      url: myURL,\r\n      responseType: 'arraybuffer',\r\n      // onDownloadProgress: (progressEvent) => {\r\n      //   // let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n      //   // console.log(\"File download in progress \", newPercent);\r\n      // },\r\n      })\r\n      .then( (response) => {\r\n          let myFile = process.env.REACT_APP_NAME + \".APK\";\r\n          console.log(myFile);\r\n          download(response.data, myFile);\r\n          console.log(\"download over\");\r\n        }\r\n      )\r\n      .catch(\r\n          (error) => {\r\n            console.log(error);\r\n            console.log(\"in axios catch\");\r\n          }\r\n      ); \r\n  } catch (e) {\r\n    console.log(e);\r\n    console.log(\"in try catch\");\r\n  } \r\n  console.log(\"Debu complete\");\r\n\r\n}\r\n\r\n\r\nexport async function downloadApk() {\r\n  let myName = process.env.REACT_APP_NAME;\r\n  let myURL = `${process.env.REACT_APP_APLAXIOS}/apl/downloadlatestbinary/${myName}/APK/`;\r\n  try {\r\n    let response = await axios({\r\n      method: 'get',\r\n      url: myURL,\r\n      responseType: 'arraybuffer',\r\n      // onDownloadProgress: (progressEvent) => {\r\n      //   // let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n      //   // console.log(\"File download in progress \", newPercent);\r\n      // },\r\n      });\r\n    let myFile = process.env.REACT_APP_NAME + \".APK\";\r\n    console.log(myFile);\r\n    download(response.data, myFile);\r\n    console.log(\"download over\");\r\n  } catch (e) {\r\n    console.log(e);\r\n    console.log(\"in try catch\");\r\n  } \r\n  \r\n  console.log(\"Debug complete\");\r\n\r\n}\r\n\r\nexport function clearBackupData() {\r\n  /* Clear dash board items */\r\n  localStorage.removeItem(\"saveRank\");\r\n  localStorage.removeItem(\"savePrize\");\r\n  localStorage.removeItem(\"saveScore\");\r\n  localStorage.removeItem(\"saveMaxRun\");\r\n  localStorage.removeItem(\"saveMaxWicket\");\r\n  localStorage.removeItem(\"statData\");\r\n  localStorage.removeItem(\"saveRankArray\");\r\n  /* Clear Stat items */\r\n  localStorage.removeItem(\"statData\");\r\n  /* clear team */\r\n  localStorage.removeItem(\"team\");\r\n  /* clear captain */\r\n  localStorage.removeItem(\"captain\");\r\n  localStorage.removeItem(\"viceCaptain\");\r\n  localStorage.removeItem(\"captainList\");\r\n  /* clear home */\r\n  localStorage.removeItem(\"home_tournamentList\");\r\n  localStorage.removeItem(\"home_groupList\");\r\n  /* clear wallet details */\r\n  localStorage.removeItem(\"saveBalance\");\r\n  localStorage.removeItem(\"saveTransactions\");\r\n}\r\n\r\n\r\nexport function isMobile() {\r\n  return (/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Windows Phone/i.test(navigator.userAgent)) ? true : false;\r\n}\r\n\r\nexport function checkIdle() {\r\n\r\n  let x = sessionStorage.getItem(\"notidle\");\r\n  // console.log(\"Idle storage\", x);\r\n  let sts = (x) ? false : true;\r\n  return sts;\r\n}\r\n\r\nexport function setIdle(idle) {\r\n  if (idle) {\r\n    sessionStorage.removeItem(\"notidle\");\r\n    cdRefresh()\r\n  } else {\r\n    sessionStorage.setItem(\"notidle\", \"user is working\");\r\n  }\r\n}\r\n\r\n\r\nconst CR = String.fromCharCode(13);\r\nconst LF = String.fromCharCode(10);\r\nconst SP = String.fromCharCode(32);\r\n\r\nconst IntCR = String.fromCharCode(128+13);\r\nconst IntLF = String.fromCharCode(128+10);\r\nconst IntSP = String.fromCharCode(128+32);\r\n\r\nexport function textToInternal(txt) {\r\n  let txt1 = txt;\r\n  let x = txt1.split(CR);\r\n  txt1 = x.join(IntCR);\r\n  x = txt1.split(LF);\r\n  txt1 = x.join(IntLF);\r\n  x = txt1.split(SP);\r\n  txt1 = x.join(IntSP);\r\n  return txt1;\r\n}\r\n\r\nexport function internalToText(txt) {\r\n  let txt1 = txt;\r\n  let x = txt1.split(IntCR);\r\n  txt1 = x.join(CR);\r\n  x = txt1.split(IntLF);\r\n  txt1 = x.join(LF);\r\n  x = txt1.split(IntSP);\r\n  txt1 = x.join(SP);\r\n  return txt1;\r\n}\r\n\r\n\r\nexport async function ifscBank(code) {\r\n  let mybank = await ifscsystem.getBankName(code.toUpperCase());\r\n  //console.log(mybank.substring(0,3));\r\n  if (mybank.substring(0,3) === \"Not\") \r\n    mybank = \"\";\r\n  return mybank;\r\n}\r\n\r\nexport async function ifscBranch(code) {\r\n  let mybank = await ifscsystem.getBranchName(code.toUpperCase());\r\n  //console.log(mybank.substring(0,3));\r\n  if (mybank.substring(0,3) === \"Not\") \r\n    mybank = \"\";\r\n  return mybank;\r\n}\r\n\r\nexport async function ifscCity(code) {\r\n  let mybank = await ifscsystem.getCity(code.toUpperCase());\r\n  //console.log(mybank.substring(0,3));\r\n  if (mybank.substring(0,3) === \"Not\") \r\n    mybank = \"\";\r\n  return mybank;\r\n}\r\n\r\nexport async function ifscNeft(code) {\r\n  let mybank = await ifscsystem.getCity(code.toUpperCase());\r\n  // console.log(mybank.substring(0,3));\r\n  if (mybank.substring(0,3) === \"Not\") \r\n    mybank = false;\r\n  return mybank;\r\n}\r\n\r\nexport async function validateAadhar(code) {\r\n  let sts = await aadhar.isValidNumber(code)\r\n  return sts;\r\n}\r\n\r\nasync function getMaster(key) {\r\n  let value = \"\";\r\n  try {\r\n    let response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/getmaster/${key}`);\r\n    //console.log(response.data);\r\n    value = response.data;\r\n  } catch(err)  {\r\n    console.log(\"---------get master fetch errorr\", key);\r\n    console.log(err);\r\n  } \r\n  return value; \r\n}\r\n\r\nexport async function getMinimumBalance() {\r\n  let value = await getMaster(\"MINBALANCE\");\r\n  if (value === \"\") value = process.env.REACT_APP_MINBALANCE;\r\n  return parseInt(value);\r\n}\r\n\r\nexport async function getMinimumAdd() {\r\n  let value = await getMaster(\"MINADDWALLET\");\r\n  if (value === \"\") value = process.env.REACT_APP_MINADDWALLET;\r\n  return parseInt(value);\r\n}\r\n\r\nexport async function getAuctionCountDown() {\r\n  let value = await getMaster(\"AUCTIONCOUNTDOWN\");\r\n  if (value === \"\") value = process.env.AUCTIONCOUNTDOWN;\r\n  return parseInt(value);\r\n\r\n}\r\n\r\nexport async function getIdleTimeout() {\r\n  let value = await getMaster(\"IDLETIMEOUT\");\r\n  if (value === \"\") value = process.env.REACT_APP_IDLETIMEOUT;\r\n  return parseInt(value);\r\n}\r\n\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = input => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\"\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\"\r\n  }\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\"\r\n  }\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\"\r\n  }\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\"\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\"\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\"\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\"\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\"\r\n  }\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from 'react';\r\n\r\n\r\n\r\n//colours \r\nimport {  blue, yellow } from '@material-ui/core/colors';\r\n\r\n\r\nfunction disabled() {\r\n\t//alert(\"disabled\");\r\n}\r\n\r\n//var liStyle = {padding: \"5px 10px\", margin: \"4px 2px\", color: 'black', fontSize:'16px', borderRadius: 7, border: 2};\r\n\r\nexport default function VsButton(props) {\r\nvar bSTyle = {padding: \"5px 10px\", margin: \"4px 2px\", color: 'white', fontSize:'14px', borderRadius:7, border: 2};\r\n\r\nbSTyle.backgroundColor = (props.color) ? props.color: 'blue';\r\nlet handler=disabled;\r\nif (props.disabled) {\r\n\t// job done\r\n\tbSTyle.backgroundColor = yellow[100];\r\n\tbSTyle.color = 'black';\r\n} else {\r\n\tif (props.onClick)\r\n\t\thandler=props.onClick\r\n}\r\n\r\nif (props.align == null)\r\n\treturn(<button style={bSTyle} onClick={handler} >{props.name}</button>);\r\nelse\r\n\treturn (\r\n\t<div align={props.align}>\r\n\t\t<button style={bSTyle} onClick={handler} >{props.name}</button>\r\n\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n//colours \r\nimport {  blue, yellow } from '@material-ui/core/colors';\r\n\r\nfunction disabled() {\r\n\t//alert(\"disabled\");\r\n}\r\n\r\n//var liStyle = {padding: \"5px 10px\", margin: \"4px 2px\", color: 'black', fontSize:'16px', borderRadius: 7, border: 2};\r\n\r\nexport default function VsCancel(props) {\r\nlet _align = (props.align == null) ? \"center\" : props.align;\r\nlet myDisabled=false;\r\nif (props.disabled != null) {\r\n\tmyDisabled = props.disabled;\r\n}\r\n//console.log(myDisabled);\r\nreturn(\t\r\n<div align={props.align}>\r\n\t<IconButton color=\"secondary\"  disabled={myDisabled} size=\"small\" onClick={props.onClick} >\r\n\t\t<CancelIcon />\r\n\t</IconButton>\r\n</div>\r\n)}\r\n\r\n","import {\r\n  successColor,\r\n  whiteColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\nimport { red, blue, green, deepOrange, deepPurple, yellow } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst globalStyles = makeStyles((theme) => ({\r\n\tgreen: {\r\n\t\tcolor: green[900],\r\n\t},\r\n\tdeepOrange: {\r\n\t\tcolor: deepOrange[900],\r\n\t},\r\n\tblue: {\r\n\t\tcolor: 'blue',\r\n\t},\r\n\tbgRed: {\r\n\t\tbackgroundColor: 'red',\r\n\t},\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: '#FAF5E9',\r\n  },\r\n\tdrawerPaper: {\r\n    //position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: 300,\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    //background: '#535454',\r\n    //color: '#fff',\r\n  },\r\n\ttitle: {\r\n\t\tfontSize: theme.typography.pxToRem(18),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\t\r\n\t\tcolor: 'blue',\r\n\t},\r\n\tvgSpacing: {\r\n\t\tpadding: \"10px 10px\", \r\n\t\tmargin: \"10px 10px\", \r\n\t},\r\n\tboxStyle: {\r\n\t\tpadding: \"5px 10px\", \r\n\t\tmargin: \"4px 2px\", \r\n\t\t\r\n\t\t//backgroundColor: blue[300] \r\n\t},\r\n\tselect: {\r\n\t\tpadding: \"none\", \r\n\t\tbackgroundColor: '#B3E5FC',\r\n\t\tmargin: \"none\",\r\n\t},\r\n\tpatientName: {\r\n\t\tfontSize: theme.typography.pxToRem(18),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\t\r\n\t\tcolor: 'blue',\r\n\t},\r\n\tpatientInfo: {\r\n\t\tmarginLeft: theme.spacing(3),\r\n\t\tfontSize: theme.typography.pxToRem(14),\r\n\t},\r\n\tpatientInfo2: {\r\n\t\tfontSize: theme.typography.pxToRem(14),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t},\r\n\t\tpatientInfo999: {\r\n\t\tfontSize: theme.typography.pxToRem(14),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tmarginRight: theme.spacing(5),\r\n\t},\r\n\tselectForm: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n\tselectLabel: {\r\n\t\tcolor: yellow[700],\r\n\t},\r\n\tlink: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t},\r\n\twebPage: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: 'white',\r\n\t},\r\n\tsignInWelcome: {\r\n\t\talign: \"center\",\r\n\t\t//position: \"fixed\",\r\n\t\t//top: \"40%\",\r\n\t\t//left: \"35%\",\r\n\t\tcolor: blue[700],\r\n\t\tbackgroundColor: yellow[100],\r\n\t\tfontSize: theme.typography.pxToRem(28),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tborder: 5,\r\n\t\tborderRadius: 7,\r\n\t\tborderWidth: 2,\r\n\t\tmargin: 5,\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  page: {\r\n  },\r\n\tyesNoTitle: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[700],\r\n  },\r\n\tyesNoNormalMessage: {\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n\tyesNoErrorMessage: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: red[700],\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#FAF5E9',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  message18: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  message16: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  message14: {\r\n    fontSize: theme.typography.pxToRem(14),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  message12: {\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  message10: {\r\n    fontSize: theme.typography.pxToRem(10),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 1, 0),\r\n  },\r\n  error:  {\r\n    fontSize: '12px',\r\n    color: red[700],\r\n    alignItems: 'center',\r\n    marginTop: '0px',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  nonerror:  {\r\n    fontSize: '12px',\r\n    color: blue[700],\r\n    alignItems: 'center',\r\n    marginTop: '0px',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  th: { \r\n    spacing: 0,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    backgroundColor: '#EEEEEE',\r\n    color: deepOrange[700],\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  td : {\r\n    spacing: 0,\r\n    // border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    height: 10,\r\n  },\r\n  upArrowCardCategory: {\r\n    width: \"16px\",\r\n    height: \"16px\"\r\n  },\r\n  stats: {\r\n    color: grayColor[0],\r\n    display: \"inline-flex\",\r\n    fontSize: \"12px\",\r\n    lineHeight: \"22px\",\r\n    \"& svg\": {\r\n      top: \"4px\",\r\n      width: \"10px\",\r\n      height: \"10px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n      top: \"4px\",\r\n      fontSize: \"16px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    }\r\n  },\r\n  cardCategory: {\r\n    color: grayColor[0],\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    paddingTop: \"10px\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitle: {\r\n    color: grayColor[2],\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: whiteColor,\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  },\r\n  modalContainer: {\r\n    content: \"\",\r\n    opacity: 0.8,\r\n    // background: rgb(26, 31, 41) url(\"your picture\") no-repeat fixed top;\r\n    // background-blend-mode: luminosity;\r\n    /* also change the blend mode to what suits you, from darken, to other \r\n    many options as you deem fit*/\r\n    // background-size: cover;\r\n    // top: 0;\r\n    // left: 0;\r\n    // right: 0;\r\n    // bottom: 0;\r\n    // position: absolute;\r\n    // z-index: -1;\r\n    // height: 500px;\r\n  },\r\n  modalTitle: {\r\n    color: blue[700],\r\n    fontSize: theme.typography.pxToRem(20),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  modalMessage: {\r\n    //color: blue[700],\r\n    fontSize: theme.typography.pxToRem(14),\r\n    //fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  modalbutton: {\r\n    margin: theme.spacing(2, 2, 2),\r\n  },\r\n  jumpButton: {\r\n    // margin: theme.spacing(0, 1, 0),\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#1A237E',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    fontSize: '16px',\r\n    width: theme.spacing(20),\r\n  },\r\n  jumpButtonFull: {\r\n    // margin: theme.spacing(0, 1, 0),\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#1A237E',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    fontSize: '16px',\r\n    width: theme.spacing(40),\r\n  },\r\n  noSpace: {\r\n    // margin: theme.spacing(0, 1, 0),\r\n    marginTop: theme.spacing(0),\r\n    marginRight: theme.spacing(0),\r\n    marginBottom: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  show: {\r\n    display: 'block',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {red, blue, green, deepOrange, yellow} from '@material-ui/core/colors';\r\nimport {\r\n  validateSpecialCharacters, validateEmail, validateMobile, validateInteger, validateUpi,\r\n  encrypt, decrypt, \r\n  currentAPLVersion, latestAPLVersion,\r\n\tgetImageName,\r\n} from \"views/functions.js\";\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport globalStyles from \"assets/globalStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 1, 0),\r\n  },\r\n  jumpButton: {\r\n    // margin: theme.spacing(0, 1, 0),\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#1A237E',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    fontSize: '16px',\r\n    width: theme.spacing(20),\r\n  },\r\n  jumpButtonFull: {\r\n    // margin: theme.spacing(0, 1, 0),\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#1A237E',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    fontSize: '16px',\r\n    width: theme.spacing(40),\r\n  },\r\n  groupName:  {\r\n    // right: 0,\r\n    fontSize: '14px',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: blue[700],\r\n    // position: 'absolute',\r\n    alignItems: 'center',\r\n    marginTop: '0px',\r\n  },\r\n  balance:  {\r\n    // right: 0,\r\n    marginRight: theme.spacing(3),\r\n    fontSize: '18px',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: blue[900],\r\n    // // position: 'absolute',\r\n    // alignItems: 'center',\r\n    // marginTop: '0px',\r\n  },\r\n  version:  {\r\n    //marginRight: theme.spacing(3),\r\n    fontSize: '18px',\r\n    color: blue[900],\r\n  },\r\n  error:  {\r\n    // right: 0,\r\n    fontSize: '12px',\r\n    color: red[700],\r\n    // position: 'absolute',\r\n    alignItems: 'center',\r\n    marginTop: '0px',\r\n  },\r\n  successMessage: {\r\n    color: green[700],\r\n  }, \r\n  failureMessage: {\r\n    color: red[700],\r\n  }, \r\n  table: {\r\n    // minWidth: 650,\r\n  },\r\n  th: { \r\n    spacing: 0,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    backgroundColor: '#EEEEEE',\r\n    color: deepOrange[700],\r\n    // border: \"1px solid black\",\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  td : {\r\n    spacing: 0,\r\n    // border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    height: 10,\r\n  },\r\n  ngHeader: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  ngCard: {\r\n    backgroundColor: '#B3E5FC',\r\n  },\r\n  divider: {\r\n    backgroundColor: '#000000',\r\n    color: '#000000',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  }\r\n}));\r\n\r\n\r\nexport function DisplayPrizeTable(props) {\r\n  const classes = useStyles();\r\n  // console.log(\"in Table\");\r\n  // console.log(props.tableName);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table> \r\n      <TableHead p={0}>\r\n          <TableRow align=\"center\">\r\n          <TableCell className={classes.th} p={0} align=\"center\">Rank</TableCell>\r\n          <TableCell className={classes.th} p={0} align=\"center\">Prize</TableCell>\r\n          </TableRow>\r\n      </TableHead>\r\n      <TableBody p={0}>\r\n        {props.tableName.map(x => {\r\n        return (\r\n          <TableRow key={x.rank} align=\"center\">\r\n          <TableCell  className={classes.td} p={0} align=\"center\" >\r\n              {x.rank}\r\n          </TableCell>\r\n          <TableCell  className={classes.td} p={0} align=\"center\" >\r\n              {x.prize}\r\n          </TableCell>\r\n          </TableRow>\r\n          )\r\n          })}\r\n      </TableBody>\r\n      </Table>\r\n  </TableContainer>    \r\n  );\r\n}\r\n\r\nexport function ShowCreateGroup() {\r\n  return (\r\n    <div>\r\n    <Typography paragraph>\r\n    Click on Group Icon (on right hand side) and select “New Group”.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    You will need the following information to create new Group.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    1.  Name of your group. e.g. \"Bonaventure Gold\". User who creates the new group is considered as the group \"OWNER/ADMIN\".\r\n    </Typography>\r\n    <Typography paragraph>\r\n    2.  Number of members that will be part of this group.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    3.  Member Free (e.g. 50/75/100 Rupees as desired by you.) It will be available in your wallet.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    4.  Select the tournamenet for which you want to play.\r\n    </Typography>\r\n    Once above information is provided, user can click on \"Create\" button to create new group.\r\n    <Typography paragraph>\r\n    Next is to select the number of prizes (in the range 1 to 5).\r\n    </Typography>\r\n    <Typography paragraph>\r\n    Total Prize money will be equal to Number of Members * Member Fee \r\n    </Typography>\r\n    <Typography paragraph>\r\n    The final step is to copy the Groupcode and share with the members.\r\n    </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function ShowJoinGroup() {\r\n  return (\r\n    <div>\r\n    <Typography paragraph>\r\n    Click on Group Icon (on right hand side) and select “Join Group”.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    When the GroupCode is shared with you, just go to \"Join Group\" and join the group using the group code.\r\n    </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShowAuctionGroup() {\r\n  return (\r\n    <div>\r\n    <Typography paragraph>\r\n    Once all the players have joined the group, the next step is to purchase Players by the process of Auction.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    Go to \"Auction\" tab. Group onwer can click on \"Start Auction\" button.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    Now the player details will be displayed to all memebers. Click on amount button and do bidding. When Group owner find that bid amount is not increasiunng, then owner will press of \"Sold\" button and the player will be awarded to the highest bidder.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    If there is no bid (bid amount 0) for the player, group owner can click on \"Unsold\" to skip the player. details will be displayed to all memebsr. Click on amount button and do bidding. When Group owner find that bid amount is not increasiunng, then he will pess of \"Sold\" button and the player will be awarded to the highest bidder.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    Once auction is complete, Admin will click on “Stop Auction” button. After this, all group members will get message indicating end of Auction.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    User can view the number of players purchased by them along with the balance amount.\r\n    </Typography>\r\n    <Typography paragraph>\r\n    All the members can view the players purchased during auction by clicking on “My Team” tab.\r\n    </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShowCaptainGroup() {\r\n  return (\r\n    <div>\r\n    <Typography paragraph>\r\n    After the Auction is complete. Use can click on \"Captain\" (availabein Menu) and select Captain and Vice Captain.\r\n    </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ShowMultipleGroup() {\r\n  return (\r\n    <div>\r\n    <Typography paragraph>\r\n    After the Auction is complete. Use can click on \"Captain\" (availabein Menu) and select Captain and Vice Captain.\r\n    </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function NoGroup() {\r\n  const classes = useStyles();\r\n  return (<h3>Does not belong to any Group</h3>);\r\n}\r\n\r\n\r\nexport class BlankArea extends React.Component {\r\n  render() {return <h5></h5>;}\r\n}\r\n\r\nexport class NothingToDisplay extends React.Component {\r\n  render() {return null}\r\n}\r\n\r\n\r\nexport class ValidComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      return (value === this.props.p1)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('minLength', (value) => {\r\n      return (value.length >= 6)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('noSpecialCharacters', (value) => {\r\n      // console.log(\"Special chars test for: \", value);\r\n      return validateSpecialCharacters(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isNumeric', (value) => {\r\n      // console.log(\"string: \", value);\r\n      // console.log(value.toString());\r\n      return validateInteger(value.toString());\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('mobile', (value) => {\r\n      return validateMobile(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('checkbalance', (value) => {\r\n      return (value >= this.props.balance);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isUpiOK', (value) => {\r\n      return validateUpi(value);\r\n    });\r\n  }\r\n\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n    ValidatorForm.removeValidationRule('mobile');\r\n    ValidatorForm.removeValidationRule('minLength');\r\n    ValidatorForm.removeValidationRule('noSpecialCharacters');   \r\n    ValidatorForm.removeValidationRule('checkbalance'); \r\n    ValidatorForm.removeValidationRule('isNumeric');    \r\n    ValidatorForm.removeValidationRule('isUpiOK');\r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n\r\nexport function GeneralMessage (props) {\r\n  return(<h3 align=\"center\">{props.message}</h3>);\r\n}\r\n\r\nexport function DisplayGroupName (props) {\r\n  const classes = useStyles();\r\n  if (props.groupName.length > 0)\r\n    return(<Typography className={classes.groupName} align=\"center\">({props.groupName})</Typography>);\r\n  else\r\n    return(<NothingToDisplay />);\r\n}\r\n\r\nexport function DisplayPageHeader (props) {\r\n    let msg = \"\";\r\n    if (props.groupName.length > 0) \r\n      msg = props.groupName + '-' + props.tournament;\r\n    return (\r\n    <div>\r\n      <Typography align=\"center\" component=\"h1\" variant=\"h5\">{props.headerName}</Typography>\r\n      <DisplayGroupName groupName={msg}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function DisplayBalance (props) {\r\n  const classes = useStyles();\r\n  // let msg =  ;\r\n  return (\r\n  <div>\r\n    <Typography align=\"right\" className={classes.balance} >{`Wallet balance: ${props.wallet}`}</Typography>\r\n    <Typography align=\"right\" className={classes.balance} >{`Bonus  balance: ${props.bonus}`}</Typography>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport function MessageToUser (props) {\r\n  const classes = useStyles();\r\n  // console.log(props.mtuMessage);\r\n  let myClass = props.mtuMessage.toLowerCase().includes(\"success\") ? classes.successMessage : classes.failureMessage;\r\n  return (\r\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={props.mtuOpen}\r\n        onClose={() => {props.mtuClose(false)}} >\r\n        <DialogTitle id=\"simple-dialog-title\" className={myClass}>{props.mtuMessage}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nexport class Copyright extends React.Component {\r\n  render () {\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        CricDream\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function JumpButton(props) {\r\n  let myDisabled = false;\r\n  if (props.disabled) myDisabled = props.disabled;\r\n  const classes = useStyles();\r\n  return (\r\n    <div align=\"center\">\r\n      {/* <Divider className={classes.divider} /> */}\r\n      {/* <BlankArea /> */}\r\n      <Button variant=\"outlined\" size=\"medium\" color=\"primary\"\r\n        disabled={myDisabled}\r\n        className={classes.jumpButton}\r\n        onClick={() => setTab(props.page) }>\r\n        {props.text}\r\n      </Button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport function JumpButton2(props) {\r\n  let myDisabled1 = (props.disabled1) ? props.disabled1 : false;\r\n  let myDisabled2 = (props.disabled2) ? props.disabled2 : false;\r\n  //const classes = useStyles();\r\n  return (\r\n    <Grid container >\r\n      <Grid item xs={6} sm={6} md={6} lg={6} >\r\n        <JumpButton page={props.page1} text={props.text1} disabled={myDisabled1}/>\r\n      </Grid>\r\n      <Grid item xs={6} sm={6} md={6} lg={6} >\r\n        <JumpButton page={props.page2} text={props.text2} disabled={myDisabled2}/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport function JumpButtonFull(props) {\r\n  let myDisabled = false;\r\n  if (props.disabled) myDisabled = props.disabled;\r\n  const classes = useStyles();\r\n  return (\r\n    <div align=\"center\">\r\n      {/* <Divider className={classes.divider} /> */}\r\n      {/* <BlankArea /> */}\r\n      <Button variant=\"outlined\" size=\"medium\" color=\"primary\"\r\n        disabled={myDisabled}\r\n        className={classes.jumpButtonFull}\r\n        onClick={() => setTab(props.page) }>\r\n        {props.text}\r\n      </Button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport function JumpButtonOnly(props) {\r\n  let myDisabled = false;\r\n  if (props.disabled) myDisabled = props.disabled;\r\n  const classes = useStyles();\r\n  return (\r\n    <div align=\"center\">\r\n      {/* <BlankArea /> */}\r\n      <Button variant=\"outlined\" size=\"medium\" color=\"primary\"\r\n        disabled={myDisabled}\r\n        className={classes.jumpButton}\r\n        onClick={() => setTab(props.page) }>\r\n        {props.text}\r\n      </Button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport function CricDreamLogo () {\r\n  let mylogo = `${process.env.PUBLIC_URL}/APLLOGO1.ICO`;\r\n  const classes = useStyles();\r\n  return (\r\n    <Avatar variant=\"square\" className={classes.avatar}  src={mylogo}/>\r\n);\r\n}\r\n\r\nexport function DisplayVersion(props) {\r\n  const classes = useStyles();\r\n  let ver = props.version.toFixed(1);\r\n  let msg =  `${props.text} ${ver}`;\r\n  return <Typography align=\"center\" className={classes.version} >{msg}</Typography>\r\n}\r\n\r\nexport async function DisplayCurrentAPLVersion() {\r\n  let version = await currentAPLVersion();\r\n  return <DisplayVersion text=\"Current APL version\" version={version}/>\r\n}\r\n\r\nexport async function DisplayLatestAPLVersion() {\r\n  let version = await latestAPLVersion();\r\n  return <DisplayVersion text=\"Latest APL version\" version={version}/>\r\n}\r\n\r\n\r\nexport function DisplayCancel(props) {\r\nreturn(\r\n  <div align=\"right\" >\r\n  <IconButton\r\n  // iconStyle={{width: '24px', height: '24px'}}\r\n    onClick={props.onCancel}\r\n    // disabled={currentTournament === 0}\r\n    aria-label=\"left\" color=\"primary\">\r\n  < CancelIcon fontSize=\"large\" />\r\n  </IconButton>\r\n  </div>\r\n)}\r\n\r\nexport function ShowTeamImage(props) {\r\n\tlet myTeam = getImageName(props.teamName);\r\n\treturn(\r\n\t<Avatar variant=\"square\" src={myTeam} />    \r\n\t)\r\n} \r\n\r\nexport function DisplayMyPlayers(props) {\r\nconst gClasses = globalStyles();\r\nreturn(\r\n  <Table>\r\n\t\t<TableHead p={0}>\r\n\t\t\t<TableRow key=\"header\" align=\"center\">\r\n\t\t\t<TableCell className={gClasses.th} p={0} align=\"center\">Team</TableCell>\r\n\t\t\t<TableCell className={gClasses.th} p={0} align=\"center\">Player Name</TableCell>\r\n\t\t\t<TableCell className={gClasses.th} p={0} align=\"center\">Bid Amount</TableCell>      \r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t\t<TableBody p={0}>\r\n\t\t\t{props.players.map(item => {\r\n\t\t\treturn (\r\n\t\t\t\t<TableRow key={item.playerName}>\r\n\t\t\t\t<TableCell className={gClasses.td} p={0} align=\"center\" ><ShowTeamImage teamName={item.team} /></TableCell> \r\n\t\t\t\t{/* <TableCell className={gClasses.td} p={0} align=\"center\" >{item.team}</TableCell>*/}\r\n\t\t\t\t<TableCell className={gClasses.td} p={0} align=\"center\" >{item.playerName}</TableCell>\r\n\t\t\t\t<TableCell className={gClasses.td} p={0} align=\"center\" >{item.bidAmount}</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t)})}\r\n\t\t</TableBody> \r\n\t</Table>\r\n)}\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { useAlert } from 'react-alert'\r\nimport VsButton from \"CustomComponents/VsButton\";\r\nimport VsCancel from \"CustomComponents/VsCancel\"\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { UserContext } from \"../../UserContext\";\r\nimport { getImageName } from \"views/functions.js\"\r\nimport {DisplayPageHeader, ValidComp, BlankArea, NothingToDisplay, DisplayBalance} from \"CustomComponents/CustomComponents.js\"\r\nimport {red, blue, deepOrange } from '@material-ui/core/colors';\r\nimport { LeakRemoveTwoTone, LensTwoTone } from '@material-ui/icons';\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontSize: theme.typography.pxToRem(20),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[700],\r\n\t},\r\n\ttdPending : {\r\n    border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tborderWidth: 1,\r\n\t\tbackgroundColor: blue[100],\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n  },\r\n\tallAppt: {\r\n\t\tbackgroundColor: blue[100],\r\n\t},\r\n\tth: { \r\n\t\tborder: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tfontSize: theme.typography.pxToRem(13),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: '#FFA726',\r\n\t\tbackgroundColor: deepOrange[200],\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n    root: {\r\n      width: '100%',\r\n    }, \r\n    info: {\r\n        color: blue[700],\r\n    },     \r\n    header: {\r\n        color: '#D84315',\r\n    }, \r\n    error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },    \r\n    messageText: {\r\n          color: '#4CC417',\r\n          fontSize: 12,\r\n          // backgroundColor: green[700],\r\n    },\r\n    symbolText: {\r\n        color: '#4CC417',\r\n        // backgroundColor: green[700],\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0, 1, 0),\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nexport default function SU_Tournament() {\r\n\tconst [isDrawerOpened, setIsDrawerOpened] = useState(\"\");\r\n\tconst [newTournament, setNewTournament] = useState(false);\r\n  const [tournamentName, setTournamentName] = useState(\"\");\r\n  const [tournamentList, setTournamentList] = useState([]);\r\n  const [tournamentType, setTournamentType] = useState(\"T20\");\r\n  const [tournamentDesc, setTournamentDesc] = useState(\"\");\r\n  const [tournamentData, setTournamentData] = useState([\"T20\", \"ODI\", \"TEST\"]);\r\n  const [teamList, setTeamList] = useState([]);\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n  const [labelNumber, setLabelNumber] = useState(0);\r\n  const [newTeamList, setNewTeamList] = useState([]);\r\n    // {label: \"TEAM1\", existingTeam: true, name: \"INDIA\"},\r\n    // {label: \"TEAM2\", existingTeam: true, name: \"ENGLAND\"},\r\n    // // {label: \"TEAM3\", existingTeam: false, name: \"\"},\r\n    // ]);\r\n  const classes = useStyles();\r\n\tconst gClasses = globalStyles();\r\n\t\r\n  const alert = useAlert();\r\n\t\r\n  useEffect(() => {\r\n      const a = async () => {\r\n        var teamres = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/uniquelist/`);\r\n        setTeamList(teamres.data);\r\n      }\r\n\t\t\tconst tournament = async () => {\r\n\t\t\t\tgetAllTournament();\r\n\t\t\t}\r\n      //a();\r\n\t\t\ttournament();\r\n  }, [])\r\n\r\n\tasync function getAllTournament() {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/list`);\r\n\t\t\t setTournamentList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching tournament list\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function getTournamentTeams(myName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${myName}`);\r\n\t\t\t setTournamentList(resp.data);\r\n\t\t\t alert.status(\"Fetched teams of tournament \"+tournamentName);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching tournament list\");\r\n\t\t}\r\n\t}\r\n\t\r\n  function getNewTeamLabel() {\r\n    let newNum = labelNumber + 1;\r\n    setLabelNumber(newNum);\r\n    return `TEAM${newNum}`;\r\n  }\r\n  \r\n  const [expandedPanel, setExpandedPanel] = useState(false);\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    // console.log({ event, isExpanded });\r\n    setExpandedPanel(isExpanded ? panel : false);\r\n  };\r\n  \r\n  function ShowTeamImage(props) {\r\n    let myTeam = getImageName(props.teamName);\r\n    return(\r\n    <Avatar variant=\"square\" src={myTeam} className={classes.medium} />    \r\n    )\r\n  } \r\n\r\n  function handleSwitch(t) {\r\n    let clone  = [].concat(newTeamList);\r\n    // console.log(t);\r\n    let tmp = clone.find(x => x.label === t);\r\n    tmp.existingTeam = (tmp.existingTeam) ? false : true;\r\n    // console.log(clone);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handleTeamSelect(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    if (newName === \"\") {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    } \r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === newName);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n    } else {\r\n      setRegisterStatus(0);\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName;\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handleTeamValidator(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName.toUpper();\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function setTeamName(label) {\r\n    //console.log(`${label}`);\r\n    let chkstr = document.getElementById(`LABEL_${label}`).value.toUpperCase();\r\n    //setfilterString(chkstr);\r\n    if (chkstr.length === 0) {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    }\r\n    //console.log(chkstr);\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === chkstr);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n      return;\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = chkstr;\r\n    setNewTeamList(clone);\r\n    setRegisterStatus(0);\r\n  }\r\n\r\n  function GetTeam(props) {\r\n    // console.log(\"Get Team\");\r\n    let myLabel=`LABEL_${props.myTeam.label}`;\r\n    if (props.myTeam.existingTeam) {\r\n      // let tmp = teamList.find(x => x.name === props.myTeam.name)\r\n      // if (!tmp) props.myTeam.name = \"\";\r\n      return(\r\n        <Select labelId='team' id='team'\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n        label=\"Team\"\r\n        name=\"Team\"\r\n        id=\"Team\"\r\n        value={props.myTeam.name}\r\n        //displayEmpty \r\n        onChange={(event) => handleTeamSelect(props.myTeam.label, event.target.value)}\r\n        >\r\n        {teamList.map(x =>\r\n        <MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n      </Select>\r\n      )      \r\n    } else {\r\n      return (\r\n      //   <TextValidator\r\n      //   key={props.myTeam.label}\r\n      //   variant=\"outlined\"\r\n      //   required\r\n      //   fullWidth      \r\n      //   label=\"Team Name\"\r\n      //   onChange={(event) => handleTeamSelect(props.myTeam.label, event.target.value)}\r\n      //   name=\"teamname\"\r\n      //   // type=\"\"\r\n      //   value={props.myTeam.name}\r\n      // />\r\n      <div className={classes.filter} align=\"center\">\r\n      <TextField className={classes.filter} \r\n        variant=\"outlined\"\r\n        id={myLabel} margin=\"none\" size=\"small\" defaultValue={props.myTeam.name}/>        \r\n      <Button key=\"filterbtn\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n        className={classes.button} onClick={(event) => setTeamName(props.myTeam.label)}>Submit\r\n      </Button>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function handleDelete(t) {\r\n    let clone = newTeamList.filter(x => x.label !== t);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function TeamDetails(props) {\r\n  // console.log(props.myTeam.existingTeam);\r\n  return (\r\n      <div key=\"TeamInfo\">\r\n        <Card profile>                    \r\n          <CardBody profile>\r\n          <Typography component=\"div\">New Team\r\n          <Switch \r\n            color=\"primary\"\r\n            checked={props.myTeam.existingTeam} \r\n            onClick={() => handleSwitch(props.myTeam.label)}\r\n          />\r\n          Existing Team\r\n          </Typography>\r\n          <GetTeam myTeam={props.myTeam} />\r\n          <ShowResisterStatus  />\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={() => { handleDelete(props.myTeam.label) }}\r\n            className={classes.button}>Delete\r\n          </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  )}\r\n\r\n  function DisplayTeam() {\r\n    return (newTeamList.map(team =>\r\n    <Accordion expanded={expandedPanel === team.label} onChange={handleAccordionChange(team.label)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <GridItem xs={9} sm={9} md={9} lg={9} >\r\n            <Typography className={classes.heading}>{team.name}</Typography>\r\n            </GridItem>\r\n            <GridItem xs={3} sm={3} md={3} lg={3} >\r\n              <ShowTeamImage teamName={team.name} />\r\n            </GridItem>\r\n        </Grid>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <TeamDetails myTeam={team} />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n    ));\r\n  }\r\n  \r\n      \r\n  async function handleSubmit() {\r\n    let tmp;\r\n    console.log(\"Submit Clicked\");\r\n    let errCode = 0;\r\n    if (tournamentName.length === 0) {\r\n      setRegisterStatus(2001);\r\n      return;\r\n    }\r\n    if (tournamentType.length === 0) {\r\n      setRegisterStatus(2002);\r\n      return;\r\n    } \r\n    if (newTeamList.length <= 1) {\r\n      setRegisterStatus(2003);\r\n      return;\r\n    } \r\n    tmp = newTeamList.filter(x => x.name === \"\");\r\n    if (tmp.length > 0) {\r\n      setRegisterStatus(2004);\r\n      return;\r\n    } \r\n    let i;\r\n    for (i=0; i<newTeamList.length; ++i) {\r\n      let  tmp = newTeamList.find(x => x.name === newTeamList[i].name);\r\n      if (tmp.length > 1) {\r\n        setRegisterStatus(2005);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/update/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n    } catch {\r\n      setRegisterStatus(2006);  // duplicate tournament name\r\n      return;\r\n    }\r\n    try {\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournamentdelete/${tournamentName}`);\r\n      // add all teams 1 by 1 \r\n      let i;\r\n      for(i=0; i<newTeamList.length; ++i) {\r\n        let tm = newTeamList[i];\r\n        //console.log(`Now setting team ${tm.name}`)\r\n        await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/add/${tournamentName}/${tm.name}`);\r\n        //console.log(`done team ${tm.name}`)\r\n      };\r\n      setRegisterStatus(2000);  \r\n    } catch {\r\n      setRegisterStatus(2007);\r\n    }\r\n    console.log(`All done `)\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    //console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    let errmsg = true;\r\n    switch (registerStatus) {\r\n      case 1001:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 1002:\r\n        myMsg = 'Dupliacte Team name';\r\n        break;\r\n      case 2000:\r\n        myMsg = 'Successfully updated Tournament with teams.';\r\n        errmsg = false;\r\n        break;\r\n      case 2001:\r\n        myMsg = 'Tournament name cannot be blank';\r\n        break;\r\n      case 2002:\r\n        myMsg = 'Tournament Type cannot be blank';\r\n        break;\r\n      case 2003:\r\n        myMsg = 'Minimum 2 teams required for tournament';\r\n        break;\r\n      case 2004:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 2005:\r\n        myMsg = 'DUplicate Team name';\r\n        break;\r\n      case 2006:\r\n        myMsg = 'DUplicate Tournamenet name';\r\n        break;\r\n      case 2007:\r\n        myMsg = 'Error updating team name';\r\n        break;\r\n      case 0:\r\n        myMsg = ``;\r\n        errmsg = false;\r\n        break;      \r\n      default:\r\n        myMsg = `Unknown error code ${registerStatus}`;\r\n        break;\r\n    }\r\n    let myClass = (errmsg) ? classes.error : classes.root;\r\n    return(\r\n      <div>\r\n        <Typography className={myClass}>{myMsg}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  function handleAddNewTeam() {\r\n    let clone = [].concat(newTeamList);  \r\n    let tmp = {label: \"\", existingTeam: true, name: \"\"}\r\n    tmp.label = getNewTeamLabel();\r\n    clone.push(tmp);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  \r\n  async function handleTournament() {\r\n    console.log(\"get tournament\");\r\n    if (tournamentName.length === 0) return;\r\n    try {\r\n      // let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/player/tteam/${tournamentName}/${currTeam}`\r\n      let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/info/${tournamentName}`\r\n      let resp = await axios.get(myURL);\r\n      let tmp = resp.data;\r\n      if (tmp.length === 0) {\r\n        setTournamentName(\"\");\r\n        setTournamentDesc(\"\");\r\n        setTournamentType(\"\");\r\n        setNewTeamList([]);\r\n        return;\r\n      }\r\n      setTournamentDesc(tmp[0].desc);\r\n      setTournamentType(tmp[0].type);\r\n\r\n      // not get all the teams\r\n      myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tournamentName}`\r\n      resp = await axios.get(myURL);\r\n      let clone = [];  \r\n      let newNum = labelNumber + 1;\r\n      var i;\r\n      for(i=0; i<resp.data.length; ++i) {\r\n        clone.push({label: `TEAM${newNum}`, existingTeam: true, name: resp.data[i].name});\r\n        ++newNum;\r\n      }\r\n      setLabelNumber(newNum);\r\n      setNewTeamList(clone);\r\n      //console.log(clone);\r\n    } catch(e) {\r\n      console.log(\"In error\")\r\n    }\r\n  }\r\n\r\n  async function handleFilter(label) {\r\n    setNewTeamList([]);\r\n    let chkstr = document.getElementById(label).value.toUpperCase();\r\n    console.log(chkstr);\r\n    //if (chkstr.length > 0) {\r\n    if (chkstr.length === 0) {\r\n      chkstr = \"ALL\";\r\n    }\r\n    console.log(chkstr);\r\n    let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/allfilter/${chkstr}`);\r\n    console.log(resp.data);\r\n    setTournamentList(resp.data);\r\n    setTournamentName(\"\");\r\n    setTournamentDesc(\"\");\r\n      //setTeamList([]);\r\n      // if (resp.data.length > 0) {\r\n      //   setFilterPlayerName(resp.data[0].name);\r\n      // }\r\n    // } else {\r\n    //   setFilterPlayerList([]);\r\n    // }      \r\n  }\r\n\r\n\tasync function addNewTournament() {\r\n\t\ttry {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/add/${tournamentName}/${tournamentName}/${tournamentType}`);\r\n\t\t\talert.show(\"Successfully added tournamenet \"+tournamentName);\r\n    } catch {\r\n\t\t\talert.error(\"Error adding tournamenet \"+tournamentName);\r\n    }\r\n\t\tgetAllTournament();\r\n\t\tsetTournamentName(\"\");\r\n\t}\r\n\t\r\n\tasync function handleTournamentSelect(tName)\r\n\t{\r\n\t\talert.show(tName);\r\n\t\tsetTournamentName(tName);\r\n\t\tgetTournamentTeams(tName)\r\n\t\t\r\n\t}\r\n\r\n\tasync function handleAdd() {\r\n\t\tsetTournamentName(\"\");\r\n\t\tsetTournamentDesc(\"\")\r\n\t\tsetTournamentType(\"\")\r\n\t\tsetIsDrawerOpened(\"ADD\");\r\n\t}\r\n\t\r\n\tasync function handleEdit(t) {\r\n\t\tsetTournamentName(t.name);\r\n\t\tsetTournamentDesc(t.desc)\r\n\t\tsetTournamentType(t.type)\r\n\t\tsetIsDrawerOpened(\"EDIT\");\r\n\t}\r\n\t\r\n\tasync function addEditTournamentSubmit() {\r\n\t\tif (isDrawerOpened === \"ADD\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/add/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n\t\t\t\talert.show(\"Successfully added tournament \"+tournamentName);\r\n\t\t\t\tlet tmpArray = [resp.data].concat(tournamentList);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetTournamentList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error adding tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t} else if (isDrawerOpened === \"EDIT\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/update/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n\t\t\t\talert.show(\"Successfully updated details of tournament \"+tournamentName);\r\n\t\r\n\t\t\t\tlet tmpArray = tournamentList.filter(x => x.name !== resp.data.name);\r\n\t\t\t\ttmpArray.push(resp.data);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetTournamentList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error updating details of tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tfunction handleTeam(t) {\r\n\t\tsessionStorage.setItem(\"shareData\", JSON.stringify(t));\r\n\t\tsetTab(2);\r\n\t}\r\n\t\r\n\tfunction handleMatch(t) {\r\n\t\tsessionStorage.setItem(\"shareData\", JSON.stringify(t));\r\n\t\tsetTab(4);\r\n\t}\r\n\t\r\n\tasync function handleCancel(t) {\r\n\t\ttry {\r\n\t\t\t// add tournament\r\n\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/count/tournament/${t.name}`);\r\n\t\t\tif (resp.data.count > 0) {\r\n\t\t\t\talert.error(\"Cannot delete tournament \"+t.name+\". Delete teams first\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// nor delete\r\n\t\t\tresp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/delete/${t.name}`);\r\n\t\t\talert.success(\"Successfully removed tournament \"+t.name);\r\n\t\t\tlet tmpArray = tournamentList.filter(x => x.name !== t.name);\r\n\t\t\tsetTournamentList(tmpArray);\r\n\t\t} catch {\r\n\t\t\talert.error(\"Error adding tournament \"+tournamentName);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction DisplayTournamentList() {\r\n\tlet colCount = 7;\r\n\treturn (\r\n\t\t<Box className={classes.allAppt} border={1} width=\"100%\">\r\n\t\t\t<TableContainer>\r\n\t\t\t<Table style={{ width: '100%' }}>\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH1\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} colSpan={colCount}>\r\n\t\t\t\t\t{\"Tournament List\"}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH21\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tName\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH22\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tDesc\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH23\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tType\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH31\"} component=\"th\" colSpan={4} scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tcmds\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>  \r\n\t\t\t{tournamentList.map( (t, index) => {\r\n\t\t\t\tlet myClass = classes.tdPending;\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<TableRow key={\"TROW\"+index}>\r\n\t\t\t\t\t<TableCell key={\"TD1\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD2\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.desc}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD3\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.type}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD10\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.link}>\r\n\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" onClick={() => { handleTeam(t);}}>Team</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD13\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.link}>\r\n\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" onClick={() => { handleMatch(t);}}>Match</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\t\t\t\t\t\r\n\t\t\t\t\t<TableCell key={\"TD11\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<IconButton color=\"primary\" size=\"small\" onClick={() => { handleEdit(t) } } >\r\n\t\t\t\t\t\t\t<EditIcon\t />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD12\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<VsCancel onClick={() => { handleCancel(t) } } />\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t)}\r\n\t\t\t)}\r\n\t\t\t</TableBody> \r\n\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Box>\t\t\r\n\t)}\r\n\t\r\n\r\n\t\r\n\t\r\n  return (\r\n  <div className={classes.paper} align=\"center\" key=\"groupinfo\">\r\n\t<DisplayPageHeader headerName=\"Configure Tournaments\" groupName=\"\" tournament=\"\"/>\r\n\t<Container component=\"main\" maxWidth=\"lg\">\r\n\t<CssBaseline />\r\n\t<VsButton name=\"Add new tournament\" align=\"right\" onClick={handleAdd} />\r\n\t<DisplayTournamentList />\r\n\t<Drawer className={classes.drawer}\r\n\t\tanchor=\"top\"\r\n\t\tvariant=\"temporary\"\r\n\t\topen={isDrawerOpened !== \"\"}\r\n\t>\r\n\t<VsCancel align=\"right\" onClick={() => {setIsDrawerOpened(\"\")}} />\r\n\t{((isDrawerOpened === \"ADD\") || (isDrawerOpened === \"EDIT\")) &&\r\n\t\t<div align=\"center\">\r\n\t\t<ValidatorForm className={gClasses.form} onSubmit={addEditTournamentSubmit}>\r\n\t\t<Grid key=\"ADDEDIT\" container justify=\"center\" alignItems=\"center\" >\r\n\t\t<Grid item xs={12} sm={12} md={12} lg={12} >\r\n\t\t<Typography className={classes.title}>{(isDrawerOpened === \"ADD\") ?\"New Tournament\" : \"Edit Tournament\"}</Typography>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={4} sm={4} md={4} lg={4} >\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Tournament Name\" \r\n\t\t\tvalue={tournamentName}\r\n\t\t\tdisabled={isDrawerOpened === \"EDIT\"}\r\n\t\t\tonChange={() => { setTournamentName(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={4} sm={4} md={4} lg={4} >\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Tournament description\" \r\n\t\t\tvalue={tournamentDesc}\r\n\t\t\tonChange={() => { setTournamentDesc(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={3} sm={3} md={3} lg={3} >\r\n\t\t\t<Select labelId='team' id='team' variant=\"outlined\" required fullWidth label=\"Tournament type\"\r\n        value={tournamentType}\r\n        onChange={(event) => setTournamentType(event.target.value)}\r\n\t\t\t>\r\n\t\t\t{tournamentData.map(x =>\r\n        <MenuItem key={x} value={x}>{x}</MenuItem>)\r\n\t\t\t}\r\n      </Select>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={1} sm={1} md={1} lg={1} >\r\n\t\t\t<VsButton name={(isDrawerOpened === \"ADD\") ? \"Add\" : \"Update\"} />\r\n\t\t</Grid>\r\n\t\t</Grid>\r\n\t\t<ValidComp />\r\n\t\t</ValidatorForm>\r\n\t\t</div>\r\n\t}\r\n\t</Drawer>\r\n\t</Container>\r\n  </div>\r\n  );    \r\n}\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { useAlert } from 'react-alert'\r\nimport VsButton from \"CustomComponents/VsButton\";\r\nimport VsCancel from \"CustomComponents/VsCancel\"\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { UserContext } from \"../../UserContext\";\r\nimport { getImageName } from \"views/functions.js\"\r\nimport {DisplayPageHeader, ValidComp, BlankArea, NothingToDisplay, DisplayBalance} from \"CustomComponents/CustomComponents.js\"\r\nimport {red, blue, deepOrange } from '@material-ui/core/colors';\r\nimport { LeakRemoveTwoTone, LensTwoTone } from '@material-ui/icons';\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontSize: theme.typography.pxToRem(20),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[700],\r\n\t},\r\n\ttdPending : {\r\n    border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tborderWidth: 1,\r\n\t\tbackgroundColor: blue[100],\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n  },\r\n\tallAppt: {\r\n\t\tbackgroundColor: blue[100],\r\n\t},\r\n\tth: { \r\n\t\tborder: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tfontSize: theme.typography.pxToRem(13),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: '#FFA726',\r\n\t\tbackgroundColor: deepOrange[200],\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n    root: {\r\n      width: '100%',\r\n    }, \r\n    info: {\r\n        color: blue[700],\r\n    },     \r\n    header: {\r\n        color: '#D84315',\r\n    }, \r\n    error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },    \r\n    messageText: {\r\n          color: '#4CC417',\r\n          fontSize: 12,\r\n          // backgroundColor: green[700],\r\n    },\r\n    symbolText: {\r\n        color: '#4CC417',\r\n        // backgroundColor: green[700],\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0, 1, 0),\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Team() {\r\n\tconst [isDrawerOpened, setIsDrawerOpened] = useState(\"\");\r\n  const [tournamentName, setTournamentName] = useState(\"\");\r\n  const [teamName, setTeamName] = useState(\"\");\r\n\r\n\tconst [newPlayer, setNewPlayer] = useState(false);\r\n  const [playerList, setPlayerList] = useState([]);\r\n\tconst [allPlayerList, setAllPlayerList] = useState([]);\r\n\tconst [selPlayerName, setSelPlayerName] = useState([]);\r\n\t\r\n\tconst [pid, setPid] = useState(0);\r\n\tconst [playerName, setPlayerName] = useState(\"\");\r\n\tconst [role, setRole] = useState(\"NA\");\r\n\tconst [battingStyle, setBattingStyle] = useState(\"NA\");\r\n\tconst [bowlingStyle, setBowlingStyle] = useState(\"NA\");\r\n\t\r\n\tconst [teamData, setTeamData] = useState({});\r\n  const classes = useStyles();\r\n\tconst gClasses = globalStyles();\r\n\t\r\n  const alert = useAlert();\r\n\t\r\n  useEffect(() => {\r\n\t\t\tconst tournament = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet tRec = JSON.parse(sessionStorage.getItem(\"shareData\"));\r\n\t\t\t\t\tsetTeamData(tRec);\r\n\t\t\t\t\tsetTournamentName(tRec.tournament);\r\n\t\t\t\t\tsetTeamName(tRec.name);\r\n\t\t\t\t\tgetTeamPlayers(tRec.tournament, tRec.name);\r\n\t\t\t\t\tgetAllPlayers();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\talert.error(\"Team name not specified\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n      //a();\r\n\t\t\ttournament();\r\n  }, [])\r\n\r\n\tasync function getTeamPlayers(tournament, myTeam) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/tteam/${tournament}/${myTeam}`);\r\n\t\t\t setPlayerList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching team list of \"+myTeam);\r\n\t\t\tsetPlayerList([]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function getAllPlayers() {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/uniquelist`);\r\n\t\t\t setAllPlayerList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching all player list\");\r\n\t\t\tsetPlayerList([]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function getTournamentTeams(myName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${myName}`);\r\n\t\t\t setTournamentList(resp.data);\r\n\t\t\t alert.status(\"Fetched teams of tournament \"+tournamentName);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching tournament list\");\r\n\t\t}\r\n\t}\r\n\t\r\n  function getNewTeamLabel() {\r\n    let newNum = labelNumber + 1;\r\n    setLabelNumber(newNum);\r\n    return `TEAM${newNum}`;\r\n  }\r\n  \r\n  const [expandedPanel, setExpandedPanel] = useState(false);\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    // console.log({ event, isExpanded });\r\n    setExpandedPanel(isExpanded ? panel : false);\r\n  };\r\n  \r\n  function ShowTeamImage(props) {\r\n    let myTeam = getImageName(props.teamName);\r\n    return(\r\n    <Avatar variant=\"square\" src={getImageName(props.teamName)} className={classes.medium} />    \r\n    )\r\n  } \r\n\r\n  function handleSwitch(t) {\r\n    let clone  = [].concat(newTeamList);\r\n    // console.log(t);\r\n    let tmp = clone.find(x => x.label === t);\r\n    tmp.existingTeam = (tmp.existingTeam) ? false : true;\r\n    // console.log(clone);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerSelect(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    if (newName === \"\") {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    } \r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === newName);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n    } else {\r\n      setRegisterStatus(0);\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName;\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerValidator(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName.toUpper();\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n \r\n  function GetTeam(props) {\r\n    // console.log(\"Get Team\");\r\n    let myLabel=`LABEL_${props.myTeam.label}`;\r\n    if (props.myTeam.existingTeam) {\r\n      // let tmp = playerList.find(x => x.name === props.myTeam.name)\r\n      // if (!tmp) props.myTeam.name = \"\";\r\n      return(\r\n        <Select labelId='team' id='team'\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n        label=\"Team\"\r\n        name=\"Team\"\r\n        id=\"Team\"\r\n        value={props.myTeam.name}\r\n        //displayEmpty \r\n        onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n        >\r\n        {playerList.map(x =>\r\n        <MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n      </Select>\r\n      )      \r\n    } else {\r\n      return (\r\n      //   <TextValidator\r\n      //   key={props.myTeam.label}\r\n      //   variant=\"outlined\"\r\n      //   required\r\n      //   fullWidth      \r\n      //   label=\"Team Name\"\r\n      //   onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n      //   name=\"teamname\"\r\n      //   // type=\"\"\r\n      //   value={props.myTeam.name}\r\n      // />\r\n      <div className={classes.filter} align=\"center\">\r\n      <TextField className={classes.filter} \r\n        variant=\"outlined\"\r\n        id={myLabel} margin=\"none\" size=\"small\" defaultValue={props.myTeam.name}/>        \r\n      <Button key=\"filterbtn\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n        className={classes.button} onClick={(event) => setTeamName(props.myTeam.label)}>Submit\r\n      </Button>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function handleDelete(t) {\r\n    let clone = newTeamList.filter(x => x.label !== t);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function TeamDetails(props) {\r\n  // console.log(props.myTeam.existingTeam);\r\n  return (\r\n      <div key=\"TeamInfo\">\r\n        <Card profile>                    \r\n          <CardBody profile>\r\n          <Typography component=\"div\">New Team\r\n          <Switch \r\n            color=\"primary\"\r\n            checked={props.myTeam.existingTeam} \r\n            onClick={() => handleSwitch(props.myTeam.label)}\r\n          />\r\n          Existing Team\r\n          </Typography>\r\n          <GetTeam myTeam={props.myTeam} />\r\n          <ShowResisterStatus  />\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={() => { handleDelete(props.myTeam.label) }}\r\n            className={classes.button}>Delete\r\n          </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  )}\r\n\r\n  function DisplayTeam() {\r\n    return (newTeamList.map(team =>\r\n    <Accordion expanded={expandedPanel === team.label} onChange={handleAccordionChange(team.label)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <GridItem xs={9} sm={9} md={9} lg={9} >\r\n            <Typography className={classes.heading}>{team.name}</Typography>\r\n            </GridItem>\r\n            <GridItem xs={3} sm={3} md={3} lg={3} >\r\n              <ShowTeamImage teamName={team.name} />\r\n            </GridItem>\r\n        </Grid>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <TeamDetails myTeam={team} />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n    ));\r\n  }\r\n  \r\n      \r\n  async function handleSubmit() {\r\n    let tmp;\r\n    console.log(\"Submit Clicked\");\r\n    let errCode = 0;\r\n    if (tournamentName.length === 0) {\r\n      setRegisterStatus(2001);\r\n      return;\r\n    }\r\n    if (tournamentType.length === 0) {\r\n      setRegisterStatus(2002);\r\n      return;\r\n    } \r\n    if (newTeamList.length <= 1) {\r\n      setRegisterStatus(2003);\r\n      return;\r\n    } \r\n    tmp = newTeamList.filter(x => x.name === \"\");\r\n    if (tmp.length > 0) {\r\n      setRegisterStatus(2004);\r\n      return;\r\n    } \r\n    let i;\r\n    for (i=0; i<newTeamList.length; ++i) {\r\n      let  tmp = newTeamList.find(x => x.name === newTeamList[i].name);\r\n      if (tmp.length > 1) {\r\n        setRegisterStatus(2005);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/update/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n    } catch {\r\n      setRegisterStatus(2006);  // duplicate tournament name\r\n      return;\r\n    }\r\n    try {\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournamentdelete/${tournamentName}`);\r\n      // add all teams 1 by 1 \r\n      let i;\r\n      for(i=0; i<newTeamList.length; ++i) {\r\n        let tm = newTeamList[i];\r\n        //console.log(`Now setting team ${tm.name}`)\r\n        await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/add/${tournamentName}/${tm.name}`);\r\n        //console.log(`done team ${tm.name}`)\r\n      };\r\n      setRegisterStatus(2000);  \r\n    } catch {\r\n      setRegisterStatus(2007);\r\n    }\r\n    console.log(`All done `)\r\n  }\r\n\r\n  \r\n  function handleAddNewTeam() {\r\n    let clone = [].concat(newTeamList);  \r\n    let tmp = {label: \"\", existingTeam: true, name: \"\"}\r\n    tmp.label = getNewTeamLabel();\r\n    clone.push(tmp);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  \r\n  async function handleTournament() {\r\n    console.log(\"get tournament\");\r\n    if (tournamentName.length === 0) return;\r\n    try {\r\n      // let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/player/tteam/${tournamentName}/${currTeam}`\r\n      let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/info/${tournamentName}`\r\n      let resp = await axios.get(myURL);\r\n      let tmp = resp.data;\r\n      if (tmp.length === 0) {\r\n        setTournamentName(\"\");\r\n        setTournamentDesc(\"\");\r\n        setTournamentType(\"\");\r\n        setNewTeamList([]);\r\n        return;\r\n      }\r\n      setTournamentDesc(tmp[0].desc);\r\n      setTournamentType(tmp[0].type);\r\n\r\n      // not get all the teams\r\n      myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tournamentName}`\r\n      resp = await axios.get(myURL);\r\n      let clone = [];  \r\n      let newNum = labelNumber + 1;\r\n      var i;\r\n      for(i=0; i<resp.data.length; ++i) {\r\n        clone.push({label: `TEAM${newNum}`, existingTeam: true, name: resp.data[i].name});\r\n        ++newNum;\r\n      }\r\n      setLabelNumber(newNum);\r\n      setNewTeamList(clone);\r\n      //console.log(clone);\r\n    } catch(e) {\r\n      console.log(\"In error\")\r\n    }\r\n  }\r\n\r\n  async function handleFilter(label) {\r\n    setNewTeamList([]);\r\n    let chkstr = document.getElementById(label).value.toUpperCase();\r\n    console.log(chkstr);\r\n    //if (chkstr.length > 0) {\r\n    if (chkstr.length === 0) {\r\n      chkstr = \"ALL\";\r\n    }\r\n    console.log(chkstr);\r\n    let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/allfilter/${chkstr}`);\r\n    console.log(resp.data);\r\n    setTournamentList(resp.data);\r\n    setTournamentName(\"\");\r\n    setTournamentDesc(\"\");\r\n      //setPlayerList([]);\r\n      // if (resp.data.length > 0) {\r\n      //   setFilterPlayerName(resp.data[0].name);\r\n      // }\r\n    // } else {\r\n    //   setFilterPlayerList([]);\r\n    // }      \r\n  }\r\n\r\n\tasync function addNewTournament() {\r\n\t\ttry {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/add/${tournamentName}/${tournamentName}/${tournamentType}`);\r\n\t\t\talert.show(\"Successfully added tournamenet \"+tournamentName);\r\n    } catch {\r\n\t\t\talert.error(\"Error adding tournamenet \"+tournamentName);\r\n    }\r\n\t\tgetAllTournament();\r\n\t\tsetTournamentName(\"\");\r\n\t}\r\n\t\r\n\tasync function handleTournamentSelect(tName)\r\n\t{\r\n\t\talert.show(tName);\r\n\t\tsetTournamentName(tName);\r\n\t\tgetTournamentTeams(tName)\r\n\t\t\r\n\t}\r\n\r\n\tasync function handleBack() {\r\n\t\tsessionStorage.setItem(\"shareData\", teamData);\r\n\t\tsetTab(2);\r\n\t}\r\n\t\r\n\tasync function handleAdd() {\r\n\t\tsetPid(0);\r\n\t\tsetPlayerName(\"\");\r\n\t\tsetRole(\"NA\");\r\n\t\tsetBowlingStyle(\"NA\");\r\n\t\tsetBattingStyle(\"\")\r\n\t\tsetIsDrawerOpened(\"ADD\");\r\n\t}\r\n\t\r\n\tasync function handleEdit(t) {\r\n\t\tsetPid(t.pid);\r\n\t\tsetPlayerName(t.name);\r\n\t\tsetRole(t.role);\r\n\t\tsetBowlingStyle(t.bowlingStyle);\r\n\t\tsetBattingStyle(t.battingStyle)\r\n\t\tsetIsDrawerOpened(\"EDIT\");\r\n\t}\r\n\t\r\n\tasync function addEditTeamSubmit() {\r\n\t\tif (isDrawerOpened === \"ADD\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/add/${pid}/${playerName}/${tournamentName}/${teamName}/${role}/${battingStyle}/${bowlingStyle}`);\r\n\t\t\t\talert.show(\"Successfully added Player \"+playerName);\r\n\t\t\t\tlet tmpArray = [resp.data].concat(playerList);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetPlayerList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error adding player \"+playerName);\r\n\t\t\t}\r\n\t\t} else if (isDrawerOpened === \"EDIT\") {\r\n\t\t\ttry {\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/update/${pid}/${playerName}/${tournamentName}/${teamName}/${role}/${battingStyle}/${bowlingStyle}`);\r\n\t\t\t\talert.show(\"Successfully update Player \"+pid);\r\n\t\t\t\tlet tmpArray = playerList.filter(x => x.pid !== pid)\r\n\t\t\t\ttmpArray = [resp.data].concat(tmpArray);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetPlayerList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error updating details of tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\tasync function handleCancel(t) {\r\n\t\ttry {\r\n\t\t\t// now delete\r\n\t\t\tawait axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/delete/${t.pid}/${t.tournament}/${t.Team}`);\r\n\t\t\talert.success(\"Successfully removed player \"+t.name);\r\n\t\t\tlet tmpArray = playerList.filter(x => x.name !== t.name);\r\n\t\t\tsetPlayerList(tmpArray);\r\n\t\t} catch {\r\n\t\t\talert.error(\"Error removing player \"+t.name);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction DisplayPlayerList() {\r\n\tlet colCount = 9;\r\n\treturn (\r\n\t\t<Box className={classes.allAppt} border={1} width=\"100%\">\r\n\t\t\t<TableContainer>\r\n\t\t\t<Table style={{ width: '100%' }}>\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH1\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} colSpan={colCount}>\r\n\t\t\t\t\t{`Players of ${teamName} (${tournamentName})`}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH20\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tImage\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH21\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tPid\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH22\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tName\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH23\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tRole\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH24\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tBatting Style\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH25\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tBowling Style\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH31\"} component=\"th\" colSpan={3} scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tcmds\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>  \r\n\t\t\t{playerList.map( (t, index) => {\r\n\t\t\t\tlet myClass = classes.tdPending;\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<TableRow key={\"TROW\"+index}>\r\n\t\t\t\t\t<TableCell key={\"TD0\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Avatar variant=\"square\" \r\n\t\t\t\t\t\t\tsrc={`https://www.cricapi.com/playerpic/${t.pid}.JPG`} \r\n\t\t\t\t\t\t\tclassName={classes.medium} \r\n\t\t\t\t\t\t/>    \r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD1\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.pid}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD2\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD3\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.role}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD4\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.battingStyle}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD5\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.bowlingStyle}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD11\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<IconButton color=\"primary\" size=\"small\" onClick={() => { handleEdit(t) } } >\r\n\t\t\t\t\t\t\t<EditIcon\t />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD12\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<VsCancel onClick={() => { handleCancel(t) } } />\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t)}\r\n\t\t\t)}\r\n\t\t\t</TableBody> \r\n\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Box>\t\t\r\n\t)}\r\n\t\r\n\tfunction handlePlayerSelect(ppid) {\r\n\t\tlet myPlayer = allPlayerList.find(x => x.pid === ppid);\r\n\t\tsetPid(myPlayer.pid);\r\n\t\tsetPlayerName(myPlayer.name);\r\n\t\tsetRole(myPlayer.role);\r\n\t\tsetBattingStyle(myPlayer.battingStyle);\r\n\t\tsetBowlingStyle(myPlayer.bowlingStyle);\r\n\t\tsetSelPlayerName(myPlayer.pid);\r\n\t}\r\n  return (\r\n  <div className={classes.paper} align=\"center\" key=\"groupinfo\">\r\n\t<DisplayPageHeader headerName={`Configure players of team ${teamName} (Tournament: ${tournamentName})`} groupName=\"\" tournament=\"\"/>\r\n\t<Container component=\"main\" maxWidth=\"md\">\r\n\t<CssBaseline />\r\n\t{(teamName === \"\") &&\r\n\t\t<Typography>Team not selected\"</Typography>\r\n\t}\r\n\t{(teamName !== \"\") &&\r\n\t<div>\r\n\t\t<div align=\"right\">\r\n\t\t\t<VsButton name=\"Add new Player\" onClick={handleAdd} />\r\n\t\t</div>\r\n\t<DisplayPlayerList />\r\n\t<Drawer className={classes.drawer}\r\n\t\tanchor=\"right\"\r\n\t\tvariant=\"temporary\"\r\n\t\topen={isDrawerOpened !== \"\"}\r\n\t>\r\n\t<VsCancel align=\"right\" onClick={() => {setIsDrawerOpened(\"\")}} />\r\n\t{((isDrawerOpened === \"ADD\") || (isDrawerOpened === \"EDIT\")) &&\r\n\t\t<div align=\"center\">\r\n\t\t<ValidatorForm className={gClasses.form} onSubmit={addEditTeamSubmit}>\r\n\t\t<Typography className={classes.title}>{(isDrawerOpened === \"ADD\") ?\"New Player\" : \"Edit Player\"}</Typography>\r\n\t\t{((isDrawerOpened === \"ADD\") && (newPlayer)) &&\r\n\t\t<VsButton name=\"Existing Player\" align=\"right\" onClick={() => setNewPlayer(false)} />\r\n\t\t}\r\n\t\t{((isDrawerOpened === \"ADD\") && (!newPlayer)) &&\r\n\t\t\t<div>\r\n\t\t\t<VsButton name=\"New Player\" align=\"right\" onClick={() => setNewPlayer(true)} />\r\n\t\t\t<Select variant=\"outlined\" required fullWidth label=\"Player\"\r\n\t\t\t\tvalue={selPlayerName} onChange={(event) => handlePlayerSelect(event.target.value)}\r\n\t\t\t>\r\n\t\t\t\t{allPlayerList.map(x =>\r\n\t\t\t\t<MenuItem key={x.pid} value={x.pid}>{`${x.name} (PID: ${x.pid})`}</MenuItem>)}\r\n      </Select>\r\n\t\t\t</div>\r\n\t\t}\t\t\t\r\n\t\t<BlankArea />\r\n\t\t<TextValidator fullWidth  required type=\"number\" className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Pid\" \r\n\t\t\tvalue={pid}\r\n\t\t\tdisabled={isDrawerOpened === \"EDIT\"}\r\n\t\t\tonChange={() => { setPid(event.target.value) }}\r\n\t\t\tvalidators={[\"minNumber:1000)\"]}\r\n\t\t\terrorMessages={['Invalid PID']}\r\n\t\t/>\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Name\" \r\n\t\t\tvalue={playerName}\r\n\t\t\tonChange={() => { setPlayerName(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Role\" \r\n\t\t\tvalue={role}\r\n\t\t\tonChange={() => { setRole(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Batting Style\" \r\n\t\t\tvalue={battingStyle}\r\n\t\t\tonChange={() => { setBattingStyle(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Bowling Style\" \r\n\t\t\tvalue={bowlingStyle}\r\n\t\t\tonChange={() => { setBowlingStyle(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t<VsButton name={(isDrawerOpened === \"ADD\") ? \"Add\" : \"Update\"} align=\"center\" />\r\n\t\t<ValidComp />\r\n\t\t</ValidatorForm>\r\n\t\t</div>\r\n\t}\r\n\t</Drawer>\r\n\t</div>\r\n\t}\r\n\t</Container>\r\n  </div>\r\n  );    \r\n}\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { useAlert } from 'react-alert'\r\nimport VsButton from \"CustomComponents/VsButton\";\r\nimport VsCancel from \"CustomComponents/VsCancel\"\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { UserContext } from \"../../UserContext\";\r\nimport { getImageName } from \"views/functions.js\"\r\nimport {DisplayPageHeader, ValidComp, BlankArea, NothingToDisplay, DisplayBalance} from \"CustomComponents/CustomComponents.js\"\r\nimport {red, blue, deepOrange } from '@material-ui/core/colors';\r\nimport { LeakRemoveTwoTone, LensTwoTone } from '@material-ui/icons';\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfontSize: theme.typography.pxToRem(20),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[700],\r\n\t},\r\n\ttdPending : {\r\n    border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tborderWidth: 1,\r\n\t\tbackgroundColor: blue[100],\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n  },\r\n\tallAppt: {\r\n\t\tbackgroundColor: blue[100],\r\n\t},\r\n\tth: { \r\n\t\tborder: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tfontSize: theme.typography.pxToRem(13),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: '#FFA726',\r\n\t\tbackgroundColor: deepOrange[200],\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n    root: {\r\n      width: '100%',\r\n    }, \r\n    info: {\r\n        color: blue[700],\r\n    },     \r\n    header: {\r\n        color: '#D84315',\r\n    }, \r\n    error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },    \r\n    messageText: {\r\n          color: '#4CC417',\r\n          fontSize: 12,\r\n          // backgroundColor: green[700],\r\n    },\r\n    symbolText: {\r\n        color: '#4CC417',\r\n        // backgroundColor: green[700],\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0, 1, 0),\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Team() {\r\n\tconst [isDrawerOpened, setIsDrawerOpened] = useState(\"\");\r\n\tconst [teamFound, setNewTournament] = useState(false);\r\n  const [tournamentName, setTournamentName] = useState(\"\");\r\n  const [tournamentType, setTournamentType] = useState(\"T20\");\r\n  const [tournamentDesc, setTournamentDesc] = useState(\"\");\r\n  const [teamName, setTeamName] = useState(\"\");\r\n\tconst [newTeamName, setNewTeamName] = useState(\"\");\r\n  const [teamList, setTeamList] = useState([]);\r\n\t\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n  const [labelNumber, setLabelNumber] = useState(0);\r\n  const [newTeamList, setNewTeamList] = useState([]);\r\n    // {label: \"TEAM1\", existingTeam: true, name: \"INDIA\"},\r\n    // {label: \"TEAM2\", existingTeam: true, name: \"ENGLAND\"},\r\n    // // {label: \"TEAM3\", existingTeam: false, name: \"\"},\r\n    // ]);\r\n  const classes = useStyles();\r\n\tconst gClasses = globalStyles();\r\n\t\r\n  const alert = useAlert();\r\n\t\r\n  useEffect(() => {\r\n      const a = async () => {\r\n        var teamres = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/uniquelist/`);\r\n        setTeamList(teamres.data);\r\n      }\r\n\t\t\tconst tournament = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet tRec = JSON.parse(sessionStorage.getItem(\"shareData\"));\r\n\t\t\t\t\tsetTournamentName(tRec.name);\r\n\t\t\t\t\tsetTournamentDesc(tRec.desc);\r\n\t\t\t\t\tsetTournamentType(tRec.type);\r\n\t\t\t\t\tgetAllTeams(tRec.name);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\talert.error(\"Tournament name not specified\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n      //a();\r\n\t\t\ttournament();\r\n  }, [])\r\n\r\n\tasync function getAllTeams(tName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tName}`);\r\n\t\t\t setTeamList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching team list of \"+tName);\r\n\t\t\tsetTeamList([]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function getTournamentTeams(myName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${myName}`);\r\n\t\t\t setTournamentList(resp.data);\r\n\t\t\t alert.status(\"Fetched teams of tournament \"+tournamentName);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching tournament list\");\r\n\t\t}\r\n\t}\r\n\t\r\n  function getNewTeamLabel() {\r\n    let newNum = labelNumber + 1;\r\n    setLabelNumber(newNum);\r\n    return `TEAM${newNum}`;\r\n  }\r\n  \r\n  const [expandedPanel, setExpandedPanel] = useState(false);\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    // console.log({ event, isExpanded });\r\n    setExpandedPanel(isExpanded ? panel : false);\r\n  };\r\n  \r\n  function ShowTeamImage(props) {\r\n    let myTeam = getImageName(props.teamName);\r\n    return(\r\n    <Avatar variant=\"square\" src={getImageName(props.teamName)} className={classes.medium} />    \r\n    )\r\n  } \r\n\r\n  function handleSwitch(t) {\r\n    let clone  = [].concat(newTeamList);\r\n    // console.log(t);\r\n    let tmp = clone.find(x => x.label === t);\r\n    tmp.existingTeam = (tmp.existingTeam) ? false : true;\r\n    // console.log(clone);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerSelect(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    if (newName === \"\") {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    } \r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === newName);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n    } else {\r\n      setRegisterStatus(0);\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName;\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerValidator(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName.toUpper();\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function oldsetTeamName(label) {\r\n    //console.log(`${label}`);\r\n    let chkstr = document.getElementById(`LABEL_${label}`).value.toUpperCase();\r\n    //setfilterString(chkstr);\r\n    if (chkstr.length === 0) {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    }\r\n    //console.log(chkstr);\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === chkstr);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n      return;\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = chkstr;\r\n    setNewTeamList(clone);\r\n    setRegisterStatus(0);\r\n  }\r\n\r\n  function GetTeam(props) {\r\n    // console.log(\"Get Team\");\r\n    let myLabel=`LABEL_${props.myTeam.label}`;\r\n    if (props.myTeam.existingTeam) {\r\n      // let tmp = teamList.find(x => x.name === props.myTeam.name)\r\n      // if (!tmp) props.myTeam.name = \"\";\r\n      return(\r\n        <Select labelId='team' id='team'\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n        label=\"Team\"\r\n        name=\"Team\"\r\n        id=\"Team\"\r\n        value={props.myTeam.name}\r\n        //displayEmpty \r\n        onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n        >\r\n        {teamList.map(x =>\r\n        <MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n      </Select>\r\n      )      \r\n    } else {\r\n      return (\r\n      //   <TextValidator\r\n      //   key={props.myTeam.label}\r\n      //   variant=\"outlined\"\r\n      //   required\r\n      //   fullWidth      \r\n      //   label=\"Team Name\"\r\n      //   onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n      //   name=\"teamname\"\r\n      //   // type=\"\"\r\n      //   value={props.myTeam.name}\r\n      // />\r\n      <div className={classes.filter} align=\"center\">\r\n      <TextField className={classes.filter} \r\n        variant=\"outlined\"\r\n        id={myLabel} margin=\"none\" size=\"small\" defaultValue={props.myTeam.name}/>        \r\n      <Button key=\"filterbtn\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n        className={classes.button} onClick={(event) => setTeamName(props.myTeam.label)}>Submit\r\n      </Button>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function handleDelete(t) {\r\n    let clone = newTeamList.filter(x => x.label !== t);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function TeamDetails(props) {\r\n  // console.log(props.myTeam.existingTeam);\r\n  return (\r\n      <div key=\"TeamInfo\">\r\n        <Card profile>                    \r\n          <CardBody profile>\r\n          <Typography component=\"div\">New Team\r\n          <Switch \r\n            color=\"primary\"\r\n            checked={props.myTeam.existingTeam} \r\n            onClick={() => handleSwitch(props.myTeam.label)}\r\n          />\r\n          Existing Team\r\n          </Typography>\r\n          <GetTeam myTeam={props.myTeam} />\r\n          <ShowResisterStatus  />\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={() => { handleDelete(props.myTeam.label) }}\r\n            className={classes.button}>Delete\r\n          </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  )}\r\n\r\n  function DisplayTeam() {\r\n    return (newTeamList.map(team =>\r\n    <Accordion expanded={expandedPanel === team.label} onChange={handleAccordionChange(team.label)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <GridItem xs={9} sm={9} md={9} lg={9} >\r\n            <Typography className={classes.heading}>{team.name}</Typography>\r\n            </GridItem>\r\n            <GridItem xs={3} sm={3} md={3} lg={3} >\r\n              <ShowTeamImage teamName={team.name} />\r\n            </GridItem>\r\n        </Grid>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <TeamDetails myTeam={team} />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n    ));\r\n  }\r\n  \r\n      \r\n  async function handleSubmit() {\r\n    let tmp;\r\n    console.log(\"Submit Clicked\");\r\n    let errCode = 0;\r\n    if (tournamentName.length === 0) {\r\n      setRegisterStatus(2001);\r\n      return;\r\n    }\r\n    if (tournamentType.length === 0) {\r\n      setRegisterStatus(2002);\r\n      return;\r\n    } \r\n    if (newTeamList.length <= 1) {\r\n      setRegisterStatus(2003);\r\n      return;\r\n    } \r\n    tmp = newTeamList.filter(x => x.name === \"\");\r\n    if (tmp.length > 0) {\r\n      setRegisterStatus(2004);\r\n      return;\r\n    } \r\n    let i;\r\n    for (i=0; i<newTeamList.length; ++i) {\r\n      let  tmp = newTeamList.find(x => x.name === newTeamList[i].name);\r\n      if (tmp.length > 1) {\r\n        setRegisterStatus(2005);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/update/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n    } catch {\r\n      setRegisterStatus(2006);  // duplicate tournament name\r\n      return;\r\n    }\r\n    try {\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournamentdelete/${tournamentName}`);\r\n      // add all teams 1 by 1 \r\n      let i;\r\n      for(i=0; i<newTeamList.length; ++i) {\r\n        let tm = newTeamList[i];\r\n        //console.log(`Now setting team ${tm.name}`)\r\n        await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/add/${tournamentName}/${tm.name}`);\r\n        //console.log(`done team ${tm.name}`)\r\n      };\r\n      setRegisterStatus(2000);  \r\n    } catch {\r\n      setRegisterStatus(2007);\r\n    }\r\n    console.log(`All done `)\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    //console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    let errmsg = true;\r\n    switch (registerStatus) {\r\n      case 1001:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 1002:\r\n        myMsg = 'Dupliacte Team name';\r\n        break;\r\n      case 2000:\r\n        myMsg = 'Successfully updated Tournament with teams.';\r\n        errmsg = false;\r\n        break;\r\n      case 2001:\r\n        myMsg = 'Tournament name cannot be blank';\r\n        break;\r\n      case 2002:\r\n        myMsg = 'Tournament Type cannot be blank';\r\n        break;\r\n      case 2003:\r\n        myMsg = 'Minimum 2 teams required for tournament';\r\n        break;\r\n      case 2004:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 2005:\r\n        myMsg = 'DUplicate Team name';\r\n        break;\r\n      case 2006:\r\n        myMsg = 'DUplicate Tournamenet name';\r\n        break;\r\n      case 2007:\r\n        myMsg = 'Error updating team name';\r\n        break;\r\n      case 0:\r\n        myMsg = ``;\r\n        errmsg = false;\r\n        break;      \r\n      default:\r\n        myMsg = `Unknown error code ${registerStatus}`;\r\n        break;\r\n    }\r\n    let myClass = (errmsg) ? classes.error : classes.root;\r\n    return(\r\n      <div>\r\n        <Typography className={myClass}>{myMsg}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  function handleAddNewTeam() {\r\n    let clone = [].concat(newTeamList);  \r\n    let tmp = {label: \"\", existingTeam: true, name: \"\"}\r\n    tmp.label = getNewTeamLabel();\r\n    clone.push(tmp);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  \r\n  async function handleTournament() {\r\n    console.log(\"get tournament\");\r\n    if (tournamentName.length === 0) return;\r\n    try {\r\n      // let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/player/tteam/${tournamentName}/${currTeam}`\r\n      let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/info/${tournamentName}`\r\n      let resp = await axios.get(myURL);\r\n      let tmp = resp.data;\r\n      if (tmp.length === 0) {\r\n        setTournamentName(\"\");\r\n        setTournamentDesc(\"\");\r\n        setTournamentType(\"\");\r\n        setNewTeamList([]);\r\n        return;\r\n      }\r\n      setTournamentDesc(tmp[0].desc);\r\n      setTournamentType(tmp[0].type);\r\n\r\n      // not get all the teams\r\n      myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tournamentName}`\r\n      resp = await axios.get(myURL);\r\n      let clone = [];  \r\n      let newNum = labelNumber + 1;\r\n      var i;\r\n      for(i=0; i<resp.data.length; ++i) {\r\n        clone.push({label: `TEAM${newNum}`, existingTeam: true, name: resp.data[i].name});\r\n        ++newNum;\r\n      }\r\n      setLabelNumber(newNum);\r\n      setNewTeamList(clone);\r\n      //console.log(clone);\r\n    } catch(e) {\r\n      console.log(\"In error\")\r\n    }\r\n  }\r\n\r\n  async function handleFilter(label) {\r\n    setNewTeamList([]);\r\n    let chkstr = document.getElementById(label).value.toUpperCase();\r\n    console.log(chkstr);\r\n    //if (chkstr.length > 0) {\r\n    if (chkstr.length === 0) {\r\n      chkstr = \"ALL\";\r\n    }\r\n    console.log(chkstr);\r\n    let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/allfilter/${chkstr}`);\r\n    console.log(resp.data);\r\n    setTournamentList(resp.data);\r\n    setTournamentName(\"\");\r\n    setTournamentDesc(\"\");\r\n      //setTeamList([]);\r\n      // if (resp.data.length > 0) {\r\n      //   setFilterPlayerName(resp.data[0].name);\r\n      // }\r\n    // } else {\r\n    //   setFilterPlayerList([]);\r\n    // }      \r\n  }\r\n\r\n\tasync function addNewTournament() {\r\n\t\ttry {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/add/${tournamentName}/${tournamentName}/${tournamentType}`);\r\n\t\t\talert.show(\"Successfully added tournamenet \"+tournamentName);\r\n    } catch {\r\n\t\t\talert.error(\"Error adding tournamenet \"+tournamentName);\r\n    }\r\n\t\tgetAllTournament();\r\n\t\tsetTournamentName(\"\");\r\n\t}\r\n\t\r\n\tasync function handleTournamentSelect(tName)\r\n\t{\r\n\t\talert.show(tName);\r\n\t\tsetTournamentName(tName);\r\n\t\tgetTournamentTeams(tName)\r\n\t\t\r\n\t}\r\n\r\n\tasync function handleAdd() {\r\n\t\tsetNewTeamName(\"\");\r\n\t\tsetIsDrawerOpened(\"ADD\");\r\n\t}\r\n\t\r\n\tasync function handleEdit(t) {\r\n\t\tsetTeamName(t.name);\r\n\t\tsetNewTeamName(t.name);\r\n\t\tsetIsDrawerOpened(\"EDIT\");\r\n\t}\r\n\t\r\n\tasync function addEditTeamSubmit() {\r\n\t\tif (isDrawerOpened === \"ADD\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/add/${tournamentName}/${newTeamName}`);\r\n\t\t\t\talert.show(\"Successfully added team \"+newTeamName);\r\n\t\t\t\tlet tmpArray = [resp.data].concat(teamList);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetTeamList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error adding tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t} else if (isDrawerOpened === \"EDIT\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/update/${tournamentName}/${teamName}/${newTeamName}`);\r\n\t\t\t\talert.show(\"Successfully updated team \"+newTeamName);\r\n\t\r\n\t\t\t\tlet tmpArray = teamList.filter(x => x.name !== teamName);\r\n\t\t\t\ttmpArray.push(resp.data);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'name');\r\n\t\t\t\tsetTeamList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error updating details of tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tfunction handlePlayer(t) {\r\n\t\tsessionStorage.setItem(\"shareData\", JSON.stringify(t));\r\n\t\tsetTab(3);\r\n\t}\r\n\t\r\n\tasync function handleCancel(t) {\r\n\t\ttry {\r\n\t\t\t// add tournament\r\n\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/team/count/${t.tournament}/${t.name}`);\r\n\t\t\tif (resp.data.count > 0) {\r\n\t\t\t\talert.error(\"Cannot delete team \"+t.name+\". Delete players first\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// nor delete\r\n\t\t\tresp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/delete/${t.tournament}/${t.name}`);\r\n\t\t\talert.success(\"Successfully removed tournament \"+t.name);\r\n\t\t\tlet tmpArray = teamList.filter(x => x.name !== t.name);\r\n\t\t\tsetTeamList(tmpArray);\r\n\t\t} catch {\r\n\t\t\talert.error(\"Error adding tournament \"+tournamentName);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction DisplayTeamList() {\r\n\tlet colCount = 6;\r\n\treturn (\r\n\t\t<Box className={classes.allAppt} border={1} width=\"100%\">\r\n\t\t\t<TableContainer>\r\n\t\t\t<Table style={{ width: '100%' }}>\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH1\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} colSpan={colCount}>\r\n\t\t\t\t\t{\"Team List\"}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH21\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tImage\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH22\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tName\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH31\"} component=\"th\" colSpan={3} scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tcmds\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>  \r\n\t\t\t{teamList.map( (t, index) => {\r\n\t\t\t\tlet myClass = classes.tdPending;\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<TableRow key={\"TROW\"+index}>\r\n\t\t\t\t\t<TableCell key={\"TD1\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<div align=\"center\">\r\n\t\t\t\t\t\t<Avatar variant=\"square\" src={getImageName(t.name)} className={classes.medium} />    \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD2\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD10\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.link}>\r\n\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" onClick={() => handlePlayer(t)}>Player</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD11\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<IconButton color=\"primary\" size=\"small\" onClick={() => { handleEdit(t) } } >\r\n\t\t\t\t\t\t\t<EditIcon\t />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD12\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<VsCancel onClick={() => { handleCancel(t) } } />\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t)}\r\n\t\t\t)}\r\n\t\t\t</TableBody> \r\n\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Box>\t\t\r\n\t)}\r\n\t\r\n\r\n\t\r\n\t\r\n  return (\r\n  <div className={classes.paper} align=\"center\" key=\"groupinfo\">\r\n\t<DisplayPageHeader headerName={`Configure Team of ${tournamentName}`} groupName=\"\" tournament=\"\"/>\r\n\t<Container component=\"main\" maxWidth=\"sm\">\r\n\t<CssBaseline />\r\n\t{(tournamentName === \"\") &&\r\n\t\t<Typography>Tournament not selected\"</Typography>\r\n\t}\r\n\t{(tournamentName !== \"\") &&\r\n\t<div>\r\n\t<VsButton name=\"Add new team\" align=\"right\" onClick={handleAdd} />\r\n\t<DisplayTeamList />\r\n\t<Drawer className={classes.drawer}\r\n\t\tanchor=\"top\"\r\n\t\tvariant=\"temporary\"\r\n\t\topen={isDrawerOpened !== \"\"}\r\n\t>\r\n\t<VsCancel align=\"right\" onClick={() => {setIsDrawerOpened(\"\")}} />\r\n\t{((isDrawerOpened === \"ADD\") || (isDrawerOpened === \"EDIT\")) &&\r\n\t\t<div align=\"center\">\r\n\t\t<ValidatorForm className={gClasses.form} onSubmit={addEditTeamSubmit}>\r\n\t\t<Grid key=\"ADDEDIT\" container justify=\"center\" alignItems=\"center\" >\r\n\t\t<Grid item xs={12} sm={12} md={12} lg={12} >\r\n\t\t<Typography className={classes.title}>{(isDrawerOpened === \"ADD\") ?\"New Team\" : \"Edit Team\"}</Typography>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={6} sm={6} md={6} lg={6} >\r\n\t\t<TextValidator fullWidth  required className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Team Name\" \r\n\t\t\tvalue={newTeamName}\r\n\t\t\t//disabled={isDrawerOpened === \"EDIT\"}\r\n\t\t\tonChange={() => { setNewTeamName(event.target.value) }}\r\n\t\t\tvalidators={['noSpecialCharacters']}\r\n\t\t\terrorMessages={['Special characters not permitted', ]}\r\n\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={6} sm={6} md={6} lg={6} >\r\n\t\t\t<VsButton name={(isDrawerOpened === \"ADD\") ? \"Add\" : \"Update\"} />\r\n\t\t</Grid>\r\n\t\t</Grid>\r\n\t\t<ValidComp />\r\n\t\t</ValidatorForm>\r\n\t\t</div>\r\n\t}\r\n\t</Drawer>\r\n\t</div>\r\n\t}\r\n\t</Container>\r\n  </div>\r\n  );    \r\n}\r\n\r\n","export const SupportedMimeTypes = [\"image/png\",  \"image/jpeg\", \"application/pdf\"]\r\nexport const SupportedExtensions = [\"PNG\",  \"JPG\", \"PDF\"];\r\n\r\nexport const str1by4 = String.fromCharCode(188)\r\nexport const str1by2 = String.fromCharCode(189)\r\nexport const str3by4 = String.fromCharCode(190)\r\n\r\nexport const VISITTYPE = {pending: \"pending\", expired: \"expired\", cancelled: \"cancelled\", visit: \"\"};\r\nexport const WALLETTYPE = {all: \"all\", wallet: \"wallet\", bonus: \"bonus\"};\r\n\r\nexport const WEEKSTR = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const SHORTWEEKSTR = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nexport const MONTHSTR = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n\t\t\t\t\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\t\r\nexport const SHORTMONTHSTR = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oc\", \"Nov\", \"Dec\"];\t\r\n\r\nexport const HOURSTR = [\r\n\"00\", \r\n\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\r\n\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\r\n\"21\", \"22\", \"23\"\r\n];\r\n\r\nexport const MINUTESTR = [\r\n\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\",\r\n\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\",\r\n\"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \r\n\"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \r\n\"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \r\n\"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\"\r\n];\r\n\r\nexport const MINUTEBLOCK=[0, 15, 30, 45];\r\n\r\nexport const DATESTR = [\r\n\"00\",\r\n\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\r\n\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\r\n\"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\r\n\"31\"\t\t\t\t\t\t\t\r\n];\r\n\r\n//in date function 0 represents JAN I.e. month number 1\r\nexport const MONTHNUMBERSTR = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\r\n\r\nexport const BLOCKNUMBER={\r\nallBlockStart: 0,\r\nallBlockEnd: 95,\r\nmorningBlockStart: 0,\r\nmorningBlockEnd: 55,\r\nafternoonBlockStart: 56,\r\nafternoonBlockEnd: 63,\r\neveningBlockStart: 64,\r\neveningBlockEnd: 95,\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { useAlert } from 'react-alert'\r\nimport VsButton from \"CustomComponents/VsButton\";\r\nimport VsCancel from \"CustomComponents/VsCancel\"\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport Datetime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { UserContext } from \"../../UserContext\";\r\nimport { getImageName, disablePastDt } from \"views/functions.js\"\r\nimport {DisplayPageHeader, ValidComp, BlankArea, NothingToDisplay, DisplayBalance} from \"CustomComponents/CustomComponents.js\"\r\nimport {red, blue, deepOrange } from '@material-ui/core/colors';\r\nimport { LeakRemoveTwoTone, LensTwoTone } from '@material-ui/icons';\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\n\r\nimport {\r\nHOURSTR, MINUTESTR, MONTHNUMBERSTR, DATESTR,\r\n} from \"views/globals\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tdateTimeNormal: {\r\n\t\tcolor: 'blue',\r\n\t\tfontSize: theme.typography.pxToRem(14),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: pink[100],\r\n\t\talign: 'center',\r\n\t\t//width: (isMobile()) ? '60%' : '20%',\r\n\t}, \r\n\tdateTimeBlock: {\r\n\t\tcolor: 'blue',\r\n\t\t//fontSize: theme.typography.pxToRem(28),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: pink[100],\r\n\t}, \r\n\ttitle: {\r\n\t\tfontSize: theme.typography.pxToRem(20),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[700],\r\n\t\tpaddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4), \r\n\t},\r\n\ttdPending : {\r\n    border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tborderWidth: 1,\r\n\t\tbackgroundColor: blue[100],\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n  },\r\n\tallAppt: {\r\n\t\tbackgroundColor: blue[100],\r\n\t},\r\n\tth: { \r\n\t\tborder: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n\t\tfontSize: theme.typography.pxToRem(13),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\t//backgroundColor: '#FFA726',\r\n\t\tbackgroundColor: deepOrange[200],\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: 'black',\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n    root: {\r\n      width: '100%',\r\n    }, \r\n    info: {\r\n        color: blue[700],\r\n    },     \r\n    header: {\r\n        color: '#D84315',\r\n    }, \r\n    error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },    \r\n    messageText: {\r\n          color: '#4CC417',\r\n          fontSize: 12,\r\n          // backgroundColor: green[700],\r\n    },\r\n    symbolText: {\r\n        color: '#4CC417',\r\n        // backgroundColor: green[700],\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0, 1, 0),\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '33.33%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Match() {\r\n\tconst [isDrawerOpened, setIsDrawerOpened] = useState(\"\");\r\n\tconst [teamFound, setNewTournament] = useState(false);\r\n  const [tournamentName, setTournamentName] = useState(\"\");\r\n  const [tournamentType, setTournamentType] = useState(\"T20\");\r\n  const [tournamentDesc, setTournamentDesc] = useState(\"\");\r\n  const [teamName, setTeamName] = useState(\"\");\r\n\tconst [newTeamName, setNewTeamName] = useState(\"\");\r\n\tconst [teamList, setTeamList] = useState([]);\r\n  const [matchList, setMatchList] = useState([]);\r\n\t\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n  const [labelNumber, setLabelNumber] = useState(0);\r\n  const [newTeamList, setNewTeamList] = useState([]);\r\n\r\n\tconst [mid, setMid] = useState(0);\r\n\tconst [team1, setTeam1] = useState(\"\");\r\n\tconst [team2, setTeam2] = useState(\"\");\r\n\tconst [startDate, setStartDate] = useState(new Date());\r\n\tconst [startTime, setStartTime] = useState(new Date());\r\n\t\r\n  const classes = useStyles();\r\n\tconst gClasses = globalStyles();\r\n\t\r\n  const alert = useAlert();\r\n\t\r\n  useEffect(() => {\r\n\t\tconst tournament = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet tRec = JSON.parse(sessionStorage.getItem(\"shareData\"));\r\n\t\t\t\tsetTournamentName(tRec.name);\r\n\t\t\t\tsetTournamentDesc(tRec.desc);\r\n\t\t\t\tsetTournamentType(tRec.type);\r\n\t\t\t\tgetAllTeams(tRec.name);\r\n\t\t\t\tgetAllMatches(tRec.name);\r\n\t\t\t} catch (e) {\r\n\t\t\t\talert.error(\"Tournament name not specified\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//a();\r\n\t\ttournament();\r\n  }, [])\r\n\r\n\tasync function getAllTeams(tName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tName}`);\r\n\t\t\t setTeamList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching team list of \"+tName);\r\n\t\t\tsetTeamList([]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function getAllMatches(tName) {\r\n\t\ttry {\r\n\t\t\t let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/match/list/tournament/${tName}`);\r\n\t\t\t setMatchList(resp.data);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\talert.error(\"error fetching match list of \"+tName);\r\n\t\t\tsetMatchList([]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n  const [expandedPanel, setExpandedPanel] = useState(false);\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    // console.log({ event, isExpanded });\r\n    setExpandedPanel(isExpanded ? panel : false);\r\n  };\r\n  \r\n  function ShowTeamImage(props) {\r\n    let myTeam = getImageName(props.teamName);\r\n    return(\r\n    <Avatar variant=\"square\" src={getImageName(props.teamName)} className={classes.medium} />    \r\n    )\r\n  } \r\n\r\n  function handleSwitch(t) {\r\n    let clone  = [].concat(newTeamList);\r\n    // console.log(t);\r\n    let tmp = clone.find(x => x.label === t);\r\n    tmp.existingTeam = (tmp.existingTeam) ? false : true;\r\n    // console.log(clone);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerSelect(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    if (newName === \"\") {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    } \r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === newName);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n    } else {\r\n      setRegisterStatus(0);\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName;\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function handlePlayerValidator(label, newName) {\r\n    // console.log(`${label}  ${newName}`)\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.label === label);\r\n    tmp.name = newName.toUpper();\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function oldsetTeamName(label) {\r\n    //console.log(`${label}`);\r\n    let chkstr = document.getElementById(`LABEL_${label}`).value.toUpperCase();\r\n    //setfilterString(chkstr);\r\n    if (chkstr.length === 0) {\r\n      setRegisterStatus(1001);\r\n      return;\r\n    }\r\n    //console.log(chkstr);\r\n    let clone = [].concat(newTeamList);\r\n    let tmp = clone.find(x => x.name === chkstr);\r\n    if ((tmp) && (tmp.label !== label)) {\r\n      setRegisterStatus(1002);\r\n      return;\r\n    }\r\n    tmp = clone.find(x => x.label === label);\r\n    tmp.name = chkstr;\r\n    setNewTeamList(clone);\r\n    setRegisterStatus(0);\r\n  }\r\n\r\n  function GetTeam(props) {\r\n    // console.log(\"Get Team\");\r\n    let myLabel=`LABEL_${props.myTeam.label}`;\r\n    if (props.myTeam.existingTeam) {\r\n      // let tmp = teamList.find(x => x.name === props.myTeam.name)\r\n      // if (!tmp) props.myTeam.name = \"\";\r\n      return(\r\n        <Select labelId='team' id='team'\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n        label=\"Team\"\r\n        name=\"Team\"\r\n        id=\"Team\"\r\n        value={props.myTeam.name}\r\n        //displayEmpty \r\n        onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n        >\r\n        {teamList.map(x =>\r\n        <MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n      </Select>\r\n      )      \r\n    } else {\r\n      return (\r\n      //   <TextValidator\r\n      //   key={props.myTeam.label}\r\n      //   variant=\"outlined\"\r\n      //   required\r\n      //   fullWidth      \r\n      //   label=\"Team Name\"\r\n      //   onChange={(event) => handlePlayerSelect(props.myTeam.label, event.target.value)}\r\n      //   name=\"teamname\"\r\n      //   // type=\"\"\r\n      //   value={props.myTeam.name}\r\n      // />\r\n      <div className={classes.filter} align=\"center\">\r\n      <TextField className={classes.filter} \r\n        variant=\"outlined\"\r\n        id={myLabel} margin=\"none\" size=\"small\" defaultValue={props.myTeam.name}/>        \r\n      <Button key=\"filterbtn\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n        className={classes.button} onClick={(event) => setTeamName(props.myTeam.label)}>Submit\r\n      </Button>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function handleDelete(t) {\r\n    let clone = newTeamList.filter(x => x.label !== t);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  function TeamDetails(props) {\r\n  // console.log(props.myTeam.existingTeam);\r\n  return (\r\n      <div key=\"TeamInfo\">\r\n        <Card profile>                    \r\n          <CardBody profile>\r\n          <Typography component=\"div\">New Team\r\n          <Switch \r\n            color=\"primary\"\r\n            checked={props.myTeam.existingTeam} \r\n            onClick={() => handleSwitch(props.myTeam.label)}\r\n          />\r\n          Existing Team\r\n          </Typography>\r\n          <GetTeam myTeam={props.myTeam} />\r\n          <ShowResisterStatus  />\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={() => { handleDelete(props.myTeam.label) }}\r\n            className={classes.button}>Delete\r\n          </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  )}\r\n\r\n  function DisplayTeam() {\r\n    return (newTeamList.map(team =>\r\n    <Accordion expanded={expandedPanel === team.label} onChange={handleAccordionChange(team.label)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <GridItem xs={9} sm={9} md={9} lg={9} >\r\n            <Typography className={classes.heading}>{team.name}</Typography>\r\n            </GridItem>\r\n            <GridItem xs={3} sm={3} md={3} lg={3} >\r\n              <ShowTeamImage teamName={team.name} />\r\n            </GridItem>\r\n        </Grid>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <TeamDetails myTeam={team} />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n    ));\r\n  }\r\n  \r\n      \r\n  async function handleSubmit() {\r\n    let tmp;\r\n    console.log(\"Submit Clicked\");\r\n    let errCode = 0;\r\n    if (tournamentName.length === 0) {\r\n      setRegisterStatus(2001);\r\n      return;\r\n    }\r\n    if (tournamentType.length === 0) {\r\n      setRegisterStatus(2002);\r\n      return;\r\n    } \r\n    if (newTeamList.length <= 1) {\r\n      setRegisterStatus(2003);\r\n      return;\r\n    } \r\n    tmp = newTeamList.filter(x => x.name === \"\");\r\n    if (tmp.length > 0) {\r\n      setRegisterStatus(2004);\r\n      return;\r\n    } \r\n    let i;\r\n    for (i=0; i<newTeamList.length; ++i) {\r\n      let  tmp = newTeamList.find(x => x.name === newTeamList[i].name);\r\n      if (tmp.length > 1) {\r\n        setRegisterStatus(2005);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/update/${tournamentName}/${tournamentDesc}/${tournamentType}`);\r\n    } catch {\r\n      setRegisterStatus(2006);  // duplicate tournament name\r\n      return;\r\n    }\r\n    try {\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournamentdelete/${tournamentName}`);\r\n      // add all teams 1 by 1 \r\n      let i;\r\n      for(i=0; i<newTeamList.length; ++i) {\r\n        let tm = newTeamList[i];\r\n        //console.log(`Now setting team ${tm.name}`)\r\n        await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/team/add/${tournamentName}/${tm.name}`);\r\n        //console.log(`done team ${tm.name}`)\r\n      };\r\n      setRegisterStatus(2000);  \r\n    } catch {\r\n      setRegisterStatus(2007);\r\n    }\r\n    console.log(`All done `)\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    //console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    let errmsg = true;\r\n    switch (registerStatus) {\r\n      case 1001:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 1002:\r\n        myMsg = 'Dupliacte Team name';\r\n        break;\r\n      case 2000:\r\n        myMsg = 'Successfully updated Tournament with teams.';\r\n        errmsg = false;\r\n        break;\r\n      case 2001:\r\n        myMsg = 'Tournament name cannot be blank';\r\n        break;\r\n      case 2002:\r\n        myMsg = 'Tournament Type cannot be blank';\r\n        break;\r\n      case 2003:\r\n        myMsg = 'Minimum 2 teams required for tournament';\r\n        break;\r\n      case 2004:\r\n        myMsg = 'Team name cannot be blank';\r\n        break;\r\n      case 2005:\r\n        myMsg = 'DUplicate Team name';\r\n        break;\r\n      case 2006:\r\n        myMsg = 'DUplicate Tournamenet name';\r\n        break;\r\n      case 2007:\r\n        myMsg = 'Error updating team name';\r\n        break;\r\n      case 0:\r\n        myMsg = ``;\r\n        errmsg = false;\r\n        break;      \r\n      default:\r\n        myMsg = `Unknown error code ${registerStatus}`;\r\n        break;\r\n    }\r\n    let myClass = (errmsg) ? classes.error : classes.root;\r\n    return(\r\n      <div>\r\n        <Typography className={myClass}>{myMsg}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  function handleAddNewTeam() {\r\n    let clone = [].concat(newTeamList);  \r\n    let tmp = {label: \"\", existingTeam: true, name: \"\"}\r\n    tmp.label = getNewTeamLabel();\r\n    clone.push(tmp);\r\n    setNewTeamList(clone);\r\n  }\r\n\r\n  \r\n  async function handleTournament() {\r\n    console.log(\"get tournament\");\r\n    if (tournamentName.length === 0) return;\r\n    try {\r\n      // let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/player/tteam/${tournamentName}/${currTeam}`\r\n      let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/info/${tournamentName}`\r\n      let resp = await axios.get(myURL);\r\n      let tmp = resp.data;\r\n      if (tmp.length === 0) {\r\n        setTournamentName(\"\");\r\n        setTournamentDesc(\"\");\r\n        setTournamentType(\"\");\r\n        setNewTeamList([]);\r\n        return;\r\n      }\r\n      setTournamentDesc(tmp[0].desc);\r\n      setTournamentType(tmp[0].type);\r\n\r\n      // not get all the teams\r\n      myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/team/tournament/${tournamentName}`\r\n      resp = await axios.get(myURL);\r\n      let clone = [];  \r\n      let newNum = labelNumber + 1;\r\n      var i;\r\n      for(i=0; i<resp.data.length; ++i) {\r\n        clone.push({label: `TEAM${newNum}`, existingTeam: true, name: resp.data[i].name});\r\n        ++newNum;\r\n      }\r\n      setLabelNumber(newNum);\r\n      setNewTeamList(clone);\r\n      //console.log(clone);\r\n    } catch(e) {\r\n      console.log(\"In error\")\r\n    }\r\n  }\r\n\r\n  async function handleFilter(label) {\r\n    setNewTeamList([]);\r\n    let chkstr = document.getElementById(label).value.toUpperCase();\r\n    console.log(chkstr);\r\n    //if (chkstr.length > 0) {\r\n    if (chkstr.length === 0) {\r\n      chkstr = \"ALL\";\r\n    }\r\n    console.log(chkstr);\r\n    let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/allfilter/${chkstr}`);\r\n    console.log(resp.data);\r\n    setTournamentList(resp.data);\r\n    setTournamentName(\"\");\r\n    setTournamentDesc(\"\");\r\n      //setMatchList([]);\r\n      // if (resp.data.length > 0) {\r\n      //   setFilterPlayerName(resp.data[0].name);\r\n      // }\r\n    // } else {\r\n    //   setFilterPlayerList([]);\r\n    // }      \r\n  }\r\n\r\n\tasync function addNewTournament() {\r\n\t\ttry {\r\n      // add tournament\r\n      await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/tournament/add/${tournamentName}/${tournamentName}/${tournamentType}`);\r\n\t\t\talert.show(\"Successfully added tournamenet \"+tournamentName);\r\n    } catch {\r\n\t\t\talert.error(\"Error adding tournamenet \"+tournamentName);\r\n    }\r\n\t\tgetAllTournament();\r\n\t\tsetTournamentName(\"\");\r\n\t}\r\n\t\r\n\tasync function handleTournamentSelect(tName)\r\n\t{\r\n\t\talert.show(tName);\r\n\t\tsetTournamentName(tName);\r\n\t\tgetTournamentTeams(tName)\r\n\t\t\r\n\t}\r\n\r\n\tasync function handleAdd() {\r\n\t\tsetMid(0);\r\n\t\tsetTeam1(\"\");\r\n\t\tsetTeam2(\"\");\r\n\t\tsetStartDate(new Date());\r\n\t\tsetStartTime(new Date());\r\n\t\tsetIsDrawerOpened(\"ADD\");\r\n\t}\r\n\t\r\n\tasync function handleEdit(t) {\r\n\t\tsetMid(t.mid);\r\n\t\tsetTeam1(t.team1);\r\n\t\tsetTeam2(t.team2);\r\n\t\tsetStartDate(new Date(t.matchStartTime));\r\n\t\tsetStartTime(new Date(t.matchStartTime));\r\n\t\tsetIsDrawerOpened(\"EDIT\");\r\n\t}\r\n\t\r\n\tasync function addEditMatchSubmit() {\r\n\t\tif (team1 === team2) {\r\n\t\t\treturn alert.error(\"Team1 and Team2 are same\");\r\n\t\t}\r\n\t\t\r\n\t\tif (isDrawerOpened === \"ADD\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet myDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate(),\r\n\t\t\t\t\tstartTime.getHours(), startTime.getMinutes());\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/match/add/${tournamentName}/${tournamentType}/${mid}/${team1}/${team2}/${myDate.getTime()}`);\r\n\t\t\t\talert.show(\"Successfully added team \"+newTeamName);\r\n\t\t\t\tlet tmpArray = [resp.data].concat(matchList);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'matchStartTime');\r\n\t\t\t\tsetMatchList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error adding tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t} else if (isDrawerOpened === \"EDIT\") {\r\n\t\t\ttry {\r\n\t\t\t\t// add tournament\r\n\t\t\t\tlet myDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate(),\r\n\t\t\t\t\tstartTime.getHours(), startTime.getMinutes());\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/match/update/${tournamentName}/${tournamentType}/${mid}/${team1}/${team2}/${myDate.getTime()}`);\r\n\t\t\t\talert.show(\"Successfully updated match \"+mid);\r\n\t\r\n\t\t\t\tlet tmpArray = matchList.filter(x => x.mid !== mid);\r\n\t\t\t\ttmpArray.push(resp.data);\r\n\t\t\t\ttmpArray = sortBy(tmpArray, 'matchStartTime');\r\n\t\t\t\tsetMatchList(tmpArray);\r\n\t\t\t\tsetIsDrawerOpened(\"\")\r\n\t\t\t} catch {\r\n\t\t\t\talert.error(\"Error updating details of tournament \"+tournamentName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tfunction handlePlayer(t) {\r\n\t\tsessionStorage.setItem(\"shareData\", JSON.stringify(t));\r\n\t\tsetTab(3);\r\n\t}\r\n\t\r\n\tasync function handleCancel(t) {\r\n\t\ttry {\r\n\t\t\t// add tournament\r\n\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/player/team/count/${t.tournament}/${t.name}`);\r\n\t\t\tif (resp.data.count > 0) {\r\n\t\t\t\talert.error(\"Cannot delete team \"+t.name+\". Delete players first\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// nor delete\r\n\t\t\tresp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/match/delete/${t.mid}`);\r\n\t\t\talert.success(\"Successfully removed match \"+t.mid);\r\n\t\t\tlet tmpArray = matchList.filter(x => x.mid !== t.mid);\r\n\t\t\tsetMatchList(tmpArray);\r\n\t\t} catch {\r\n\t\t\talert.error(\"Error removing match \"+t.mid);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction DisplayMatchList() {\r\n\tlet colCount = 6;\r\n\treturn (\r\n\t\t<Box className={classes.allAppt} border={1} width=\"100%\">\r\n\t\t\t<TableContainer>\r\n\t\t\t<Table style={{ width: '100%' }}>\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH1\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} colSpan={colCount}>\r\n\t\t\t\t\t{`Matches of ${tournamentName} (${tournamentType})`}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t\t<TableRow align=\"center\">\r\n\t\t\t\t\t<TableCell key={\"TH21\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tDate\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH24\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tMatch Id\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH22\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tTeam1\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH23\"} component=\"th\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tTeam2\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TH31\"} component=\"th\" colSpan={2} scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\tclassName={classes.th} >\r\n\t\t\t\t\tcmds\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>  \r\n\t\t\t{matchList.map( (t, index) => {\r\n\t\t\t\tlet myClass = classes.tdPending;\r\n\t\t\t\tlet ttt = new Date(t.matchStartTime);\r\n\t\t\t\tlet myDate = DATESTR[ttt.getDate()] + \"/\" +\r\n\t\t\t\t\tMONTHNUMBERSTR[ttt.getMonth()] + \"/\" + ttt.getFullYear();\r\n\t\t\r\n\t\t\t\tlet myTime=HOURSTR[ttt.getHours()] + \":\" + MINUTESTR[ttt.getMinutes()];\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<TableRow key={\"TROW\"+index}>\r\n\t\t\t\t\t<TableCell key={\"TD1\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{myDate+\" \"+myTime}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD4\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.mid}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD2\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.team1}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD3\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<Typography className={classes.apptName}>\r\n\t\t\t\t\t\t\t{t.team2}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD11\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<IconButton color=\"primary\" size=\"small\" onClick={() => { handleEdit(t) } } >\r\n\t\t\t\t\t\t\t<EditIcon\t />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell key={\"TD12\"+index} align=\"center\" component=\"td\" scope=\"row\" align=\"center\" padding=\"none\"\r\n\t\t\t\t\t\tclassName={myClass}>\r\n\t\t\t\t\t\t<VsCancel onClick={() => { handleCancel(t) } } />\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t)}\r\n\t\t\t)}\r\n\t\t\t</TableBody> \r\n\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Box>\t\t\r\n\t)}\r\n\t\r\n\r\n\tfunction handleDate(d) {\r\n\t\tsetStartDate(d.toDate());\r\n\t}\r\n\t\r\n\tfunction handleTime(d) {\r\n\t\tsetStartTime(d.toDate());\r\n\t}\r\n\t\r\n  return (\r\n  <div className={classes.paper} align=\"center\" key=\"groupinfo\">\r\n\t<DisplayPageHeader headerName={`Configure Match of ${tournamentName}`} groupName=\"\" tournament=\"\"/>\r\n\t<Container component=\"main\" maxWidth=\"sm\">\r\n\t<CssBaseline />\r\n\t{(tournamentName === \"\") &&\r\n\t\t<Typography>Tournament not selected\"</Typography>\r\n\t}\r\n\t{(tournamentName !== \"\") &&\r\n\t<div>\r\n\t<VsButton name=\"Add new match\" align=\"right\" onClick={handleAdd} />\r\n\t<DisplayMatchList />\r\n\t<Drawer className={classes.drawer}\r\n\t\tanchor=\"right\"\r\n\t\tvariant=\"temporary\"\r\n\t\topen={isDrawerOpened !== \"\"}\r\n\t>\r\n\t<VsCancel align=\"right\" onClick={() => {setIsDrawerOpened(\"\")}} />\r\n\t{((isDrawerOpened === \"ADD\") || (isDrawerOpened === \"EDIT\")) &&\r\n\t\t<div align=\"center\">\r\n\t\t<ValidatorForm className={gClasses.form} onSubmit={addEditMatchSubmit}>\r\n\t\t<Typography className={classes.title}>{((isDrawerOpened === \"ADD\") ?\"New Team\" : \"Edit Team\")+\" for \"+tournamentName}</Typography>\r\n\t\t<TextValidator fullWidth  required type=\"number\" className={gClasses.vgSpacing}\r\n\t\t\tlabel=\"Match ID\" \r\n\t\t\tvalue={mid}\r\n\t\t\tdisabled={isDrawerOpened === \"EDIT\"}\r\n\t\t\tonChange={() => { setMid(event.target.value) }}\r\n\t\t\tvalidators={['minNumber:1000']}\r\n\t\t\terrorMessages={['Invalid Match Number' ]}\r\n\t\t/>\r\n\t\t<Typography className={classes.title}>{\"Team 1\"}</Typography>\r\n\t\t<Select variant=\"outlined\" required fullWidth label=\"Team 1\" className={gClasses.vgSpacing}\r\n\t\t\tvalue={team1} onChange={(event) => setTeam1(event.target.value)}\r\n\t\t>\r\n\t\t{teamList.map(x =>\r\n\t\t\t<MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n\t\t</Select>\r\n\t\t<Typography className={classes.title}>{\"Team 2\"}</Typography>\r\n\t\t<Select variant=\"outlined\" required fullWidth label=\"Team 2\" className={gClasses.vgSpacing}\r\n\t\t\tvalue={team2} onChange={(event) => setTeam2(event.target.value)}\r\n\t\t>\r\n\t\t{teamList.map(x =>\r\n\t\t\t<MenuItem key={x.name} value={x.name}>{x.name}</MenuItem>)}\r\n\t\t</Select>\t\t\r\n\t\t<Typography className={classes.title}>{\"Match Date\"}</Typography>\r\n\t\t<Datetime \r\n\t\t\tclassName={classes.dateTimeBlock}\r\n\t\t\tinputProps={{className: classes.dateTimeNormal}}\r\n\t\t\ttimeFormat={false} \r\n\t\t\tinitialValue={startDate}\r\n\t\t\tdateFormat=\"DD/MM/yyyy\"\r\n\t\t\tisValidDate={disablePastDt}\r\n\t\t\tonClose={handleDate}\r\n\t\t/>\r\n\t\t<Typography className={classes.title}>{\"Match Time\"}</Typography>\r\n\t\t<Datetime \r\n\t\t\tclassName={classes.dateTimeBlock}\r\n\t\t\tinputProps={{className: classes.dateTimeNormal}}\r\n\t\t\tdateFormat={false} \r\n\t\t\ttimeFormat=\"HH:mm\"\r\n\t\t\tinitialValue={startTime}\r\n\t\t\tonClose={handleTime}\r\n\t\t/>\r\n\t\t<VsButton name={(isDrawerOpened === \"Add\") ? \"Add\" : \"Update\"} />\r\n\t\t<ValidComp />\r\n\t\t</ValidatorForm>\r\n\t\t</div>\r\n\t}\r\n\t</Drawer>\r\n\t</div>\r\n\t}\r\n\t</Container>\r\n  </div>\r\n  );    \r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\n//import { createBrowserHistory } from \"history\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu'; \r\nimport {red, blue, green, deepOrange} from '@material-ui/core/colors';\r\nimport Divider from '@material-ui/core/Divider';\r\n/// cd items import\r\n\r\nimport SU_Tournament from \"views/SuperUser/Tournament.js\" \r\nimport Player from \"views/SuperUser/Player.js\"\r\nimport Team from \"views/SuperUser/Team.js\" \r\nimport Match from \"views/SuperUser/Match.js\" \r\n\r\n\r\nimport Modal from 'react-modal';\r\n// import download from 'js-file-downloader';\r\nimport { BlankArea } from './CustomComponents';\r\nimport {cdRefresh, specialSetPos, upGradeRequired, \r\n  downloadApk, clearBackupData,\r\n  checkIdle, setIdle,\r\n  internalToText, textToInternal,\r\n} from \"views/functions.js\"\r\nimport { LocalSee } from '@material-ui/icons';\r\n\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    backgroundColor       : '#000000',\r\n    color                 : '#FFFFFF',\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  noSpacing: { \r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  menuButton: {\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  icon : {\r\n    color: '#FFFFFF',\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  statButton: {\r\n    //marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  teamButton: {\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  dashButton: {\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  new: {\r\n    fontSize: theme.typography.pxToRem(20),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: '#FFFFFF'\r\n  },\r\n  whatIsNew: {\r\n    backgroundColor: '#B3E5FC',\r\n    color: '#000000',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0),\r\n    // backgroundColor: theme.palette.secondary.main,\r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),\r\n  \r\n  },\r\n  avatar1: {\r\n    margin: theme.spacing(0),\r\n    backgroundColor: deepOrange[500],\r\n    color: theme.palette.getContrastText(deepOrange[500]), \r\n    // width: theme.spacing(10),\r\n    // height: theme.spacing(10),  \r\n  },\r\n}));\r\n\r\nexport function setTab(num) {\r\n  \r\n  //myTabPosition = num;\r\n  //console.log(`Menu pos ${num}`);\r\n  localStorage.setItem(\"menuValue\", num);\r\n  cdRefresh();\r\n}\r\n\r\nexport function CricDreamTabs() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  // for menu \r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  // for group menu\r\n  const [grpAuth, setGrpAuth] = React.useState(true);\r\n  const [grpAnchorEl, setGrpAnchorEl] = React.useState(null);\r\n  const grpOpen = Boolean(grpAnchorEl);\r\n  const [arunGroup, setArunGroup] = React.useState(false);\r\n  const [value, setValue] = React.useState(1);\r\n  const [upgrade, setUpgrade] = React.useState(false);\r\n  const [modalIsOpen,setIsOpen] = React.useState(true);\r\n  const [userGroup, setUserGroup] = React.useState([]);\r\n  const [latestApk, setLatestApk] = React.useState(null);\r\n\r\n  //console.log(location.pathname);\r\n\r\n  useEffect(() => {       \r\n    const checkVersion = async () => {\r\n      //console.log(\"about to call upgrade\");\r\n      let upg = await upGradeRequired();\r\n      // console.log(upg);\r\n      if (upg.latest) setLatestApk(upg.latest);\r\n\r\n      setUpgrade(upg.status);\r\n      if (upg.status) setIsOpen(true);\r\n    }\r\n    function setMenuValue() {\r\n\r\n      // check url\r\n      let walletRouting = false;\r\n      let x = location.pathname.split(\"/\");\r\n\r\n      \r\n      if (walletRouting) {\r\n        localStorage.setItem(\"menuValue\", process.env.REACT_APP_WALLET);\r\n        history.push(\"/\");\r\n      } else if (checkIdle()) {\r\n        localStorage.setItem(\"menuValue\", process.env.REACT_APP_HOME);\r\n      } \r\n      setValue(parseInt(localStorage.getItem(\"menuValue\")));\r\n      setIdle(false);\r\n    }\r\n    // Version check is now done in Home component\r\n    // if (value === parseInt(process.env.REACT_APP_HOME))\r\n    //   checkVersion();  \r\n    \r\n    setMenuValue();\r\n\r\n\r\n\r\n}, []);\r\n\r\n\r\n  //console.log(`in Tab function  ${localStorage.getItem(\"menuValue\")}`);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n \r\n\r\n  function setMenuValue(num) {\r\n    setValue(num);\r\n    handleClose();\r\n    localStorage.setItem(\"menuValue\", num);\r\n  }\r\n\r\n  const handleSuTournament = () => { setMenuValue(1);  }\r\n  const handleTeam = () => { setMenuValue(2);  }\r\n\tconst handlePlayer = () => { setMenuValue(3);  }\r\n\tconst handleMatch = () => { setMenuValue(4);  }\r\n  \r\n  const handleLogout = () => {\r\n    handleClose();\r\n    localStorage.setItem(\"uid\", \"\");\r\n    //localStorage.setItem(\"menuValue\", process.env.REACT_APP_DASHBOARD);\r\n    cdRefresh();  \r\n  };\r\n\r\n  function DisplayCdItems() {\r\n    switch(value) {\r\n\t\t\tcase 1: return <SU_Tournament />;\r\n      case 2: return <Team />;\r\n\t\t\tcase 3: return <Player />;\r\n\t\t\tcase 4: return <Match />;\r\n      default: return  null;\r\n    }\r\n  }\r\n\r\n  async function handleUpgrade() {\r\n    //console.log(\"upgrade requested\");\r\n    closeModal();\r\n    await downloadApk();\r\n    console.log(\"APK has to be downloaded\");\r\n  }\r\n\r\n  function openModal() { setIsOpen(true); }\r\n \r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    //subtitle.style.color = '#f00';\r\n  }\r\n \r\n  function closeModal(){ setIsOpen(false); }\r\n\r\n\r\n    \r\n  let mylogo = `${process.env.PUBLIC_URL}/APLLOGO1.ICO`;\r\n  let groupCharacter=\"G\";\r\n  let currencyChar = '₹';\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.noSpacing}>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon className={classes.icon}/>\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                // keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >    \r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n\t\t\t\t\t<Button color=\"inherit\" className={classes.dashButton} onClick={handleSuTournament}>Tournament</Button>\r\n       </Toolbar>\r\n      </AppBar>\r\n      <DisplayCdItems/>\r\n      {/* <DisplayUpgrade/> */}\r\n    </div>\r\n  );\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Switch, Route } from 'react-router-dom';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport Container from '@material-ui/core/Container';\r\n// import SignUp from \"../Login/SignUp.js\";\r\n// import ForgotPassword from \"./ForgotPassword.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport axios from \"axios\";\r\nimport {red, green, blue } from '@material-ui/core/colors';\r\nimport { DesktopWindows } from '@material-ui/icons';\r\nimport { isMobile, cdRefresh, specialSetPos, encrypt, clearBackupData, downloadApk } from \"views/functions.js\"\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\nimport { CricDreamLogo } from 'CustomComponents/CustomComponents.js';\r\nimport { BlankArea } from 'CustomComponents/CustomComponents';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  android: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  download: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    // color: yellow[900]\r\n  },\r\n  downloadButon: {\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n  error:  {\r\n    // right: 0,\r\n    fontSize: '12px',\r\n    color: blue[700],\r\n    // position: 'absolute',\r\n    alignItems: 'center',\r\n    marginTop: '0px',\r\n},\r\n}));\r\n\r\nconst handleSubmit = e => {\r\n  e.preventDefault();\r\n};\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const gClasses = globalStyles();\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  // const [showPage, setShowPage] = useState(true);\r\n  // const [open, setOpen] = useState(true)\r\n  // const { setUser } = useContext(UserContext);\r\n  const [ errorMessage, setErrorMessage ] = useState({msg: \"\", isError: false });\r\n  const [ downloadMessage, setDownloadMessage ] = useState(\"\");\r\n  // const [errorFound, setErrorFound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"logout\")) {\r\n      localStorage.clear();\r\n    }\r\n    if (window.localStorage.getItem(\"uid\")) {\r\n      // setUser({ uid: window.localStorage.getItem(\"uid\"), admin: window.localStorage.getItem(\"admin\") })\r\n      // history.push(\"/admin\")\r\n    } else {\r\n      // setShowPage(true)\r\n    }\r\n  });\r\n\r\n  function setError(msg, isError) {\r\n    setErrorMessage({msg: msg, isError: isError});\r\n  }\r\n\r\n  function handleForgot() {\r\n    //console.log(\"Call forgot password here\")\r\n    // history.push('/admin/emailpassword');\r\n    sessionStorage.setItem(\"currentLogin\", \"RESET\");\r\n    cdRefresh();\r\n  }\r\n\r\n  function handleRegister() {\r\n    //console.log(\"Call for register here\");\r\n    // history.push(\"/admin/register\")\r\n    sessionStorage.setItem(\"currentLogin\", \"SIGNUP\");\r\n    cdRefresh();\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    let myUserName = document.getElementById(\"userName\").value;\r\n    let myPassword = document.getElementById(\"password\").value;\r\n    setUserName(myUserName);\r\n    setPassword(myPassword);\r\n\r\n    let response = \"\"\r\n    try { \r\n      let enPassword = encrypt(myPassword);\r\n      response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/criclogin/${myUserName}/${enPassword}`); \r\n      setError(\"\", false);\r\n    } catch (err) {\r\n      setError(\"Invalid Username / Password\", true);\r\n    }\r\n    // console.log(\"Signinresponse\", response.data);\r\n    if (response.status === 200) {\r\n      let myUID = response.data.uid;\r\n      let userPlan = response.data.userPlan; \r\n      response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/group/default/${myUID}`);\r\n      // console.log(\"default respose\", response.data);\r\n      // SAMPLE OUTPUT\r\n      // {\"uid\":\"8\",\"gid\":2,\"displayName\":\"Salgia Super Stars\",\r\n      // \"groupName\":\"Happy Home Society Grp 2\",\"tournament\":\"ENGAUST20\",\"ismember\":true,\"admin\":true}\r\n      window.localStorage.setItem(\"uid\", myUID)\r\n      window.localStorage.setItem(\"gid\", response.data.gid);\r\n      window.localStorage.setItem(\"displayName\", response.data.displayName);\r\n      window.localStorage.setItem(\"userName\", response.data.userName);\r\n      window.localStorage.setItem(\"groupName\", response.data.groupName);\r\n      window.localStorage.setItem(\"tournament\", response.data.tournament);\r\n      window.localStorage.setItem(\"admin\", response.data.admin)\r\n      window.localStorage.setItem(\"userPlan\", userPlan);\r\n      window.localStorage.setItem(\"SNG\", \"\");\r\n      window.localStorage.setItem(\"cGroup\", \"\");\r\n      clearBackupData();\r\n\r\n      // setUser({ uid: myUID, admin: response.data.admin });\r\n      // cdRefresh(true);\r\n      //let newPos = specialSetPos();\r\n      //if (newPos < 0) newPos = 0;\r\n      // let newPos = (response.data.gid > 0) ? process.env.REACT_APP_DASHBOARD : process.env.REACT_APP_GROUP;\r\n      // console.log(`User is ${localStorage.getItem(\"uid\")}`)\r\n      setTab(process.env.REACT_APP_HOME);\r\n    }\r\n\r\n  }\r\n  \r\n  async function handleAndroid() {\r\n    try {\r\n      setDownloadMessage(\"APL Android app download started. Please wait...\")\r\n      // console.log(\"Download Android app\");\r\n      await downloadApk();\r\n      setDownloadMessage(\"APL Android app download complete.\")\r\n      // console.log(\"APK has to be downloaded\");\r\n    } catch (e) {\r\n      setDownloadMessage(\"Error encountred while downloading APL Android app\", true)\r\n    }\r\n  }\r\n\r\n  function handleIos() {\r\n    console.log(\"Download IOS app\");\r\n  }\r\n\r\n\r\n  function DisplayDownload() {\r\n    if (process.env.REACT_APP_DEVICE !== \"WEB\") return null;\r\n\r\n    let androidImage = `${process.env.PUBLIC_URL}/image/ANDROID.JPG`;\r\n    let iosImage = `${process.env.PUBLIC_URL}/image/IOS.JPG`;\r\n    return (\r\n      <div align=\"center\">\r\n      <Typography className={gClasses.message18}>Download the offical app</Typography>\r\n      <BlankArea />\r\n      <Typography className={gClasses.nonerror} align=\"center\">{downloadMessage}</Typography>\r\n      <Grid key=\"jp1\" container align=\"center\">\r\n        <Grid item xs={12} sm={12} md={12} lg={12} >\r\n        <button><img src={androidImage} alt=\"my image\" onClick={handleAndroid} /></button>\r\n        </Grid>\r\n        {/* <Grid item className={classes.downloadButon} xs={6} sm={6} md={6} lg={6} >\r\n        <button disabled><img src={iosImage}  alt=\"my image\" onClick={handleIos} /></button>\r\n        </Grid> */}\r\n      </Grid>\r\n      </div>\r\n    )  \r\n  } \r\n\r\n  \r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleVisibility(visible) {\r\n    let myName = document.getElementById(\"userName\").value;\r\n    let myPassword = document.getElementById(\"password\").value;\r\n    setUserName(myName);\r\n    setPassword(myPassword);\r\n    setShowPassword(visible);\r\n  }\r\n\r\n  function NonMobile() {\r\n    return (\r\n      <TextField variant=\"outlined\" required fullWidth\r\n        id=\"password\" label=\"Password\" type=\"password\"\r\n        defaultValue={password}\r\n        // onChange={(event) => setPassword(event.target.value)}\r\n      />\r\n    )\r\n  }\r\n\r\n  \r\n  function PwdVisible() {\r\n    console.log(\"IN visisble\");\r\n    return (\r\n      <TextField variant=\"outlined\" required fullWidth\r\n        id=\"password\" label=\"Password\" type=\"text\"\r\n        defaultValue={password}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <VisibilityOffIcon onClick={() => { handleVisibility(false); }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  function PwdNotVisible() {\r\n    console.log(\"In non visisble\")\r\n    return (\r\n      <TextField variant=\"outlined\" required fullWidth\r\n        id=\"password\" label=\"Password\" type=\"password\"\r\n        defaultValue={password}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <VisibilityIcon onClick={() => { handleVisibility(true); }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    )\r\n\r\n  }\r\n\r\n  function GetPassword() {\r\n    let itIsMobile = isMobile();\r\n    console.log(\"Mobile\", itIsMobile)\r\n    if (itIsMobile) {\r\n      if (showPassword) \r\n        return <PwdVisible />\r\n      else\r\n        return <PwdNotVisible />\r\n    } else {\r\n      return <NonMobile />\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={gClasses.paper}>\r\n        <CricDreamLogo />        \r\n        <Typography component=\"h1\" variant=\"h5\">Sign in</Typography>\r\n        <form className={gClasses.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            // autoComplete=\"fname\"\r\n            id=\"userName\"\r\n            label=\"User Name\"\r\n            // name=\"userName\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            defaultValue={userName}\r\n            // autoFocus\r\n            // onChange={(event) => setUserName(event.target.value)}\r\n          />\r\n          <h3></h3>\r\n          <GetPassword />\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          /> */}\r\n          <div>\r\n            <Typography className={(errorMessage.isError) ? gClasses.error : gClasses.nonerror} align=\"left\">{errorMessage.msg}</Typography>\r\n            <Typography className={gClasses.root}>\r\n              <Link href=\"#\" onClick={handleForgot} variant=\"body2\">\r\n              Forgot password\r\n              </Link>\r\n            </Typography>\r\n          </div>\r\n          <Button \r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleClick}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n        {/* <Typography className={gClasses.root}>\r\n            <Link href=\"#\" onClick={handleRegister} variant=\"body2\">\r\n            Register\r\n          </Link>\r\n        </Typography> */}\r\n          {/* <BlankArea /> */}\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            //className={classes.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            Sign Up\r\n        </Button>\r\n        <BlankArea />\r\n        <DisplayDownload />\r\n      </div>\r\n      {/* <Route  path='/admin/emailpassword' component={Reset} key=\"MemberList\"/>\r\n      <Route  path='/admin/register' component={SignUp} key=\"NewGroup\"></Route> */}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState ,useContext} from 'react';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\n// import { Switch, Route } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport Container from '@material-ui/core/Container';\r\n//import { UserContext } from \"../../UserContext\";\r\n//import axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport red from '@material-ui/core/colors/red';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import SignIn from \"./SignIn.js\";\r\nimport { cdRefresh, encrypt, decrypt, isMobile,\r\n  validateSpecialCharacters, validateMobile, validateEmail,\r\n} from \"views/functions.js\";\r\nimport { CricDreamLogo, BlankArea, ValidComp } from 'CustomComponents/CustomComponents.js';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n}));\r\n\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const gClasses = globalStyles();\r\n  // const history = useHistory();\r\n  const [referalCode, setReferalCode] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [registerStatus, setRegisterStatus] = useState(199);\r\n  const [mobile, setMobile] = useState(\"\");\r\n  // const { setUser } = useContext(UserContext);\r\n\r\n  const handleSubmit = async() => {\r\n    console.log(\"Submit command provided\");\r\n    let x = getInput();\r\n    console.log(\"fetched value\", x);\r\n    if (validate(\"userName\")) return;\r\n    if (validate(\"password\")) return;\r\n    if (validate(\"repeatPassword\", \"password\")) return;\r\n    // console.log(\"All okay\");\r\n\r\n    let tmp1 = encrypt(x.password);\r\n    let tmp2 = encrypt(email);\r\n    let rCode = (referalCode !== \"\") ? referalCode : \"NA\";\r\n\t\t\r\n    let response = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricsignup/${x.userName}/${tmp1}/${tmp2}/${mobile}/${rCode}`);\r\n    if (response.status === 200) {\r\n      let setemailresp = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricemailwelcome/${tmp2}`);\r\n      // history.push(\"/signin\");\r\n      sessionStorage.setItem(\"currentLogin\", \"SIGNIN\");\r\n      cdRefresh();\r\n\r\n    } else {\r\n      // error\r\n      setRegisterStatus(response.status);\r\n      console.log(`Status is ${response.status}`);\r\n    }\r\n  }\r\n\r\n  function handleLogin() {\r\n    // console.log(\"Call for login here\");\r\n    // history.push(\"/signin\")\r\n    sessionStorage.setItem(\"currentLogin\", \"SIGNIN\");\r\n    cdRefresh();\r\n\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    // console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    switch (registerStatus) {\r\n      case 199:\r\n        myMsg = \"\";\r\n        break;\r\n      case 200:\r\n        // setUserName(\"\");\r\n        // setPassword(\"\");\r\n        // setRepeatPassword(\"\");\r\n        // setEmail(\"\");\r\n        myMsg = `User ${userName} successfully regisitered.`;\r\n        break;\r\n      case 602:\r\n        myMsg = \"User Name already in use\";\r\n        break;\r\n      case 603:\r\n        myMsg = \"Email id already in use\";\r\n        break;\r\n      default:\r\n          myMsg = \"Unknown Error\";\r\n          break;\r\n    }\r\n    return(\r\n      <div>\r\n        <Typography className={(registerStatus === 200) ? gClasses.nonerror : gClasses.error}>{myMsg}</Typography>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const [error, setError] = useState({});\r\n  const [helperText, setHelperText] = useState({});\r\n  function validate(eid, eid2) {\r\n    getInput();\r\n    let e = document.getElementById(eid);\r\n    let myValue = e.value; \r\n    // console.log(eid, myValue);\r\n    let newError=false;\r\n    let newText = \"\";\r\n    \r\n    switch (eid) {\r\n      case \"userName\":\r\n        if (!validateSpecialCharacters(myValue)) {\r\n          newError = true;\r\n          newText = 'Special characters not permitted';\r\n        } else if (myValue.length < 6) {\r\n          newError = true;\r\n          newText = \"Mimumum 6 characters required\";\r\n        }\r\n      break;\r\n      case \"password\":\r\n        // console.log(\"Setting password as \", myValue);\r\n        // setPassword(myValue);\r\n        if (!validateSpecialCharacters(myValue)) {\r\n          newError = true;\r\n          newText = 'Special characters not permitted';\r\n        } else if (myValue.length < 6) {\r\n          newError = true;\r\n          newText = \"Mimumum 6 characters required\";\r\n        }\r\n      break;\r\n      case \"repeatPassword\":\r\n        let myValue2 = document.getElementById(eid2).value;\r\n        // setRepeatPassword(myValue);\r\n        if (myValue !== myValue2) {\r\n          newError = true;\r\n          newText = 'Password mismatch';\r\n        } \r\n      break;\r\n    }\r\n    \r\n    let x = {};\r\n    x[eid] = newError;\r\n    setError(x);\r\n    \r\n    x = {};\r\n    x[eid] = newText;\r\n    setHelperText(x);\r\n\r\n    e.focus();\r\n    return newError;\r\n  }\r\n\r\n  function getInput() {\r\n    let myName = document.getElementById(\"userName\").value;\r\n    let myPass1 = document.getElementById(\"password\").value;\r\n    let myPass2 = document.getElementById(\"repeatPassword\").value;\r\n    // console.log(myName, myPass1, myPass2);\r\n\r\n    setUserName(myName);\r\n    setPassword(myPass1);\r\n    setRepeatPassword(myPass2);\r\n    return {\r\n      userName: myName,\r\n      password: myPass1,\r\n      repeatPassword: myPass2\r\n    }\r\n  }\r\n\r\n  const [showPass1, setShowPass1] = useState(false);\r\n  const [showPass2, setShowPass2] = useState(false);\r\n\r\n  function handleVisibility1(isVisible) {\r\n    // console.log(\"In visisble 1\", isVisible);\r\n    getInput();\r\n    setShowPass1(isVisible);\r\n    let e = document.getElementById('password');\r\n    e.focus();\r\n  }\r\n\r\n  function handleVisibility2(isVisible) {\r\n    // console.log(\"In visisble 2\", isVisible);\r\n    getInput();\r\n    setShowPass2(isVisible);\r\n    let e = document.getElementById('repeatPassword');\r\n    e.focus();\r\n  }\r\n\r\n  function Password1NonMobile() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"password\" label=\"Password\" type=\"password\"\r\n      defaultValue={password}\r\n      // onChange={(event) => validate(\"password\")}\r\n      error={error.password}\r\n      helperText={helperText.password}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n  function Password2NonMobile() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"repeatPassword\" label=\"Repeat Password\" type=\"password\"\r\n      defaultValue={repeatPassword}\r\n      // onChange={(event) => validate(\"repeatPassword\", \"password\")}\r\n      error={error.repeatPassword}\r\n      helperText={helperText.repeatPassword}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n  function Password1Text() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"password\" label=\"Password\" type=\"text\"\r\n      defaultValue={password}\r\n      // onChange={(event) => validate(\"password\")}\r\n      error={error.password}\r\n      helperText={helperText.password}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <VisibilityOffIcon onClick={() => { handleVisibility1(false); }} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n  function Password2Text() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"repeatPassword\" label=\"Repeat Password\" type=\"text\"\r\n      defaultValue={repeatPassword}\r\n      // onChange={(event) => validate(\"password\")}\r\n      error={error.repeatPassword}\r\n      helperText={helperText.repeatPassword}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <VisibilityOffIcon onClick={() => { handleVisibility2(false); }} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n  function Password1Password() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"password\" label=\"Password\" type=\"password\"\r\n      defaultValue={password}\r\n      // onChange={(event) => validate(\"password\")}\r\n      error={error.password}\r\n      helperText={helperText.password}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <VisibilityIcon onClick={() => { handleVisibility1(true); }} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n  function Password2Password() {\r\n    return (\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n      id=\"repeatPassword\" label=\"Repeat Password\" type=\"password\"\r\n      defaultValue={repeatPassword}\r\n      // onChange={(event) => validate(\"password\")}\r\n      error={error.repeatPassword}\r\n      helperText={helperText.repeatPassword}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <VisibilityIcon onClick={() => { handleVisibility2(true); }} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      // validators={['required', 'minLength', 'noSpecialCharacters']}\r\n      // errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n      // value={password}\r\n    />\r\n    );\r\n  }\r\n\r\n\r\n  function DisplayPassword1() {\r\n    // let tmp = isMobile();\r\n    // console.log(\"is mobile2\", tmp);\r\n    if (isMobile()) {\r\n      if (showPass1) {\r\n        return <Password1Text />\r\n      } else {\r\n        return <Password1Password />\r\n      }\r\n    } else {\r\n      return <Password1NonMobile />\r\n    }\r\n  }\r\n\r\n  function DisplayPassword2() {\r\n    // let tmp = isMobile();\r\n    // console.log(\"is mobile2\", tmp);\r\n    if (isMobile()) {\r\n      if (showPass2) {\r\n        return <Password2Text />\r\n      } else {\r\n        return <Password2Password />\r\n      }\r\n    } else {\r\n      return <Password2NonMobile />\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={gClasses.paper}>\r\n        <CricDreamLogo />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register New User\r\n        </Typography>\r\n    <ValidatorForm className={gClasses.form} onSubmit={handleSubmit}>\r\n      <TextValidator variant=\"outlined\" fullWidth\r\n          id=\"referral\" label=\"Referral Code\" name=\"referral\"\r\n          // defaultValue={userName}\r\n          onChange={(event) => setReferalCode(event.target.value)}\r\n          validators={['noSpecialCharacters']}\r\n          errorMessages={[`Special Characters not permitted`]}\r\n          // error={error.userName}\r\n          // helperText={helperText.userName}\r\n          value={referalCode}\r\n        />\r\n      <BlankArea/>\r\n      <TextValidator variant=\"outlined\" required fullWidth\r\n          id=\"userName\" label=\"User Name\" name=\"username\"\r\n          // defaultValue={userName}\r\n          onChange={(event) => setUserName(event.target.value)}\r\n          validators={['required', 'minLength', 'noSpecialCharacters']}\r\n          errorMessages={['User Name to be provided', 'Mimumum 6 characters required', ]}\r\n          // error={error.userName}\r\n          // helperText={helperText.userName}\r\n          value={userName}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Invalid Email', 'Email to be provided']}\r\n          value={email}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Mobile\"\r\n          onChange={(event) => setMobile(event.target.value)}\r\n          name=\"mobile\"\r\n          //type=\"email\"\r\n          validators={['required', 'mobile']}\r\n          errorMessages={[, 'Mobile to be provided', '10 digit mobile number required']}\r\n          value={mobile}\r\n      />\r\n      <BlankArea/>\r\n      <DisplayPassword1 />\r\n      <BlankArea/>\r\n      <DisplayPassword2 />\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={gClasses.submit}\r\n      >\r\n        Register\r\n    </Button>\r\n    </ValidatorForm>\r\n    <ShowResisterStatus/>\r\n    </div>\r\n    <ValidComp p1={password}/>    \r\n    <Typography className={gClasses.root}>\r\n      <Link href=\"#\" onClick={handleLogin} variant=\"body2\">\r\n        Already have an account? Sign in \r\n      </Link>\r\n    </Typography>\r\n    {/* <Switch>\r\n      <Route  path='/admin/signin' component={SignIn} key=\"MemberList\"/>\r\n    </Switch> */}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// import './App.css';\r\nimport axios from \"axios\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n// import download from 'js-file-download';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport globalStyles from \"assets/globalStyles\";\r\n// import modalStyles from \"assets/modalStyles\";\r\n\r\nimport { downloadApk } from \"views/functions\";\r\nimport { BlankArea } from 'CustomComponents/CustomComponents';\r\nimport { isMobile, cdRefresh } from \"views/functions.js\"\r\nimport { red, blue, deepOrange } from '@material-ui/core/colors';\r\n\r\n// const APPNAME  = process.env.REACT_APP_NAME;\r\n// const APLAXIOS = process.env.REACT_APP_APLAXIOS;\r\nconst BRHEIGHT = 8;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbackground: {\r\n\t\tbackgroundImage:  `${process.env.PUBLIC_URL}/image/APLIMAGE.JPG`,\r\n\t},\r\n\tcontainer: {\r\n\t\tbackgroundImage: `${process.env.PUBLIC_URL}/image/APLIMAGE.JPG`,   //`url(${backgroundImage})`,\r\n\t\tbackgroundPosition: 'center',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\twidth: '100vw',\r\n\t\theight: '100vh'\r\n\t},\r\n\tbuttonLeft: {\r\n\t\tposition: \"fixed\",\r\n\t\ttop: \"1%\",\r\n\t\tleft: \"2%\"\r\n\t},\r\n\tbuttonRight1: {\r\n\t\tposition: \"fixed\",\r\n\t\ttop: \"1%\",\r\n\t\tright: \"26%\"\r\n\t},\r\n\tbuttonRight2: {\r\n\t\tposition: \"fixed\",\r\n\t\ttop: \"1%\",\r\n\t\tright: \"1%\"\r\n\t},\r\n\tdlm: {\r\n\t\tposition: \"fixed\",\r\n\t\ttop: \"6%\",\r\n\t\tleft: \"1%\",\r\n\t\t//right: 'auto',\r\n\t\tcolor: blue[900],\r\n\t\tfontSize: '12px',\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t},\r\n\tdlm2: {\r\n\t\tleft: \"1%\",\r\n\t\t//right: 'auto',\r\n\t\tcolor: blue[900],\r\n\t\tfontSize: '12px',\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t},\r\n\tleft: {\r\n\t\tfontSize: theme.typography.pxToRem(16),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: red[900],\r\n\t\t//align: \"right\",\r\n\t  },\r\n\tright: {\r\n\t\tfontSize: theme.typography.pxToRem(16),\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tcolor: blue[900]\r\n\t},\r\n\toContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\toImage: {\r\n\t\tflexBasis: '40%',\r\n\t},\r\n\toText1: {\r\n\t\tfontSize: \"20px\",\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tpaddingLeft: \"0px\",\r\n\t\talign: \"center\"\r\n\t},\r\n\toText2: {\r\n\t\tfontSize: \"16px\",\r\n\t\talign: \"left\",\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\t\tpaddingLeft: \"0px\",\r\n\t}\r\n}));\r\n\r\nconst Welcome = () => {\r\n\tlet classes = useStyles();\r\n\tlet gClasses = globalStyles();\r\n\tconst [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\tconst [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\tconst [bgImage, setBgImage] = useState(\"APLIMAGE\")\r\n\tconst [ downloadMessage, setDownloadMessage ] = useState(\"\");\r\n\tconst [allOffer, setAllOffer] = useState([]);\r\n\r\n\t// const imageUrl =  ? desktopImage : mobileImage;\r\n\t// const [breakCount, setBreakCount] = useState(0);\r\n\t// const [dummyArray, setDummyArray] = useState([]);\r\n\t// const [ downloadMessage, setDownloadMessage ] = useState(\"\");\r\n\r\n\tfunction calculateBR() {\r\n\t\t// console.log(window.innerHeight, BRHEIGHT);\r\n\t\t// let myCount = Math.floor(window.innerHeight / BRHEIGHT) - 10;\r\n\t\t// if (myCount < 1) myCount = 1;\r\n\t\t// if (myCount > (200-1)) myCount = (200-1);\r\n\t\t// setBreakCount(myCount);\r\n\t\t// console.log(breakCount);\r\n\t\t// let tmp = (window.innerWidth >= 650) ? \"WELCOME\" : \"MOBILE\";\r\n\t\t// console.log(\"Imgae is\", tmp);\r\n\t\t// setBgImage(tmp);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleWindowResize = () => {\r\n\t\t\tconsole.log(window.innerHeight, window.innerWidth);\r\n\t\t\tcalculateBR();\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\t// console.log()\r\n\t\t};\r\n\r\n\t\tconst getOffer = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/getoffer/ALL`); \r\n\t\t\t\tsetAllOffer(resp.data);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetWindowWidth(window.innerWidth);\r\n\t\tsetWindowHeight(window.innerHeight);\r\n\t\twindow.addEventListener('resize', handleWindowResize);\r\n\t\tcalculateBR();\r\n\t\tgetOffer();\r\n\t\t\r\n\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', handleWindowResize);\r\n\t\t}\r\n\t}, []);\r\n    \r\n    \r\n\tfunction handleSignin() {\r\n\t\tsessionStorage.setItem(\"currentLogin\", \"SIGNIN\");\r\n\t\tcdRefresh();\r\n\t}\r\n\t\r\n\tfunction handleSignup() {\r\n\t\tsessionStorage.setItem(\"currentLogin\", \"SIGNUP\");\r\n\t\tcdRefresh();\r\n\t}\r\n\r\n\tfunction DisplayEasy() {\r\n\treturn(\r\n\t\t<p>\r\n\t\t<span className={classes.left}>Auction Premier League</span>\r\n\t\t<span className={classes.right}> is easy to play with.</span>\r\n\t\t</p>\r\n\t)};\r\n\r\n\r\n\tasync function handleAndroid() {\r\n\t\ttry {\r\n\t\t\tsetDownloadMessage(\"APL Android app download started. Please wait...\")\r\n\t\t\t// console.log(\"Download Android app\");\r\n\t\t\tawait downloadApk();\r\n\t\t\tsetDownloadMessage(\"APL Android app download complete.\")\r\n\t\t\t// console.log(\"APK has to be downloaded\");\r\n\t\t} catch (e) {\r\n\t\t\tsetDownloadMessage(\"Error encountred while downloading APL Android app\", true)\r\n\t\t}\r\n\t\tsetTimeout(() => setDownloadMessage(\"\"), 5000);    \r\n\t}\r\n\r\n\tfunction DisplayTopButtons() {\r\n\treturn (\r\n\t<div>\r\n\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\" \r\n\t\tonClick={handleSignin}\r\n\t\tclassName={classes.buttonRight1}\r\n\t\t>\r\n\t\tLogin\r\n\t\t</Button>\r\n\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\" \r\n\t\tonClick={handleSignup}\r\n\t\tclassName={classes.buttonRight2}\r\n\t\t>\r\n\t\tRegister\r\n\t\t</Button>\r\n\t\t{ /* <Typography className={classes.dlm} align=\"center\">{downloadMessage}</Typography> */ }\r\n\t</div>\r\n\t)};\r\n\t\t\t\r\n\r\n\tfunction DisplayStep(props) {\r\n\treturn(\r\n\t\t// <Box borderColor=\"primary.main\" border={2}>\r\n\t\t<img src={`${process.env.PUBLIC_URL}/image/S${props.step}.JPG`} alt=\"ARUN\" />\r\n\t\t// </Box>\r\n\t)}\r\n\r\n\tfunction DisplayOffer(props) {\r\n\t// console.log(props.offer);\r\n\treturn (\r\n\t\t<Box key={props.offer.header} borderColor=\"primary.main\" border={2}>\r\n\t\t\t<Grid key={props.offer.header} container justify=\"center\" alignItems=\"center\" >\r\n\t\t\t<GridItem key={props.offer.header+\"1\"}  xs={2} sm={2} md={2} lg={2} >\r\n\t\t\t\t<Avatar variant=\"square\" \r\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/image/OFFER2.JPG`}\r\n\t\t\t\tclassName={classes.medium} />   \r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem key={props.offer.header+\"2\"} xs={10} sm={10} md={10} lg={10} >\r\n\t\t\t<Typography className={classes.oText1}>{props.offer.header}</Typography>\r\n\t\t\t<Typography className={classes.oText2}>{props.offer.message}</Typography>\r\n\t\t\t</GridItem>\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)}\r\n\r\n\tlet image1= `${process.env.PUBLIC_URL}/image/APLWELCOME1.JPG`;\r\n\tlet image2= `${process.env.PUBLIC_URL}/image/APLWELCOME2.JPG`;\r\n\t// console.log(image1, image2);\r\n\treturn (\r\n\t<div align=\"center\">\r\n\t\t<DisplayTopButtons />\r\n\t\t<img src={image1} alt=\"ARUN\" height={windowHeight} width={windowWidth}/>\r\n\t\t<DisplayEasy />\r\n\t\t<BlankArea />\r\n\t\t<DisplayStep step=\"1\" />\r\n\t\t<DisplayStep step=\"2\" />\r\n\t\t<DisplayStep step=\"3\" />\r\n\t\t<DisplayStep step=\"4\" />\r\n\t\t<DisplayStep step=\"5\" />\r\n\t\t<DisplayStep step=\"6\" />\r\n\t\t{allOffer.map((item) => {\r\n\t\t\t// console.log(item);\r\n\t\t\treturn (\r\n\t\t\t<DisplayOffer key={item.header} offer={item} />\r\n\t\t)})}\r\n\t\t<Typography className={classes.dlm2} align=\"center\">{downloadMessage}</Typography>\r\n\t\t<Button onClick={handleAndroid} >\r\n\t\t<img src={image2} alt=\"ARUN\" />\r\n\t\t</Button>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default Welcome;\r\n","import React, { useState, useEffect ,useContext} from 'react';\r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\n//import { Switch, Route } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport Container from '@material-ui/core/Container';\r\n//import { UserContext } from \"../../UserContext\";\r\nimport axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport red from '@material-ui/core/colors/red';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cdRefresh, encrypt} from \"views/functions.js\";\r\nimport { CricDreamLogo, BlankArea, ValidComp } from 'CustomComponents/CustomComponents.js';\r\nimport { setTab } from \"CustomComponents/CricDreamTabs.js\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n}));\r\n\r\n/***\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      return (value === this.props.p1)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('minLength', (value) => {\r\n      return (value.length >= 6)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('noSpecialCharacters', (value) => {\r\n      return validateSpecialCharacters(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n  }\r\n\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n    ValidatorForm.removeValidationRule('minLength');\r\n    ValidatorForm.removeValidationRule('noSpecialCharacters');   \r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n***/\r\n\r\n\r\n\r\nexport default function ResetPassword() {\r\n  const classes = useStyles();\r\n\tconst gClasses = globalStyles();\r\n//  const history = useHistory();\r\n  // const [userName, setUserName] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n\tconst [disableButton, setDisableButton] = useState(true);\r\n\r\n  // const { setUser } = useContext(UserContext);\r\n\r\n  // const handleChange = (event) => {\r\n  //   const { user } = this.state;\r\n  //   user[event.target.name] = event.target.value;\r\n  //   this.setState({ user });\r\n  // }\r\n\t\r\n\tuseEffect(() => {\r\n\r\n    const verifyCode = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tlet myUrl = `${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricverifycode/${sessionStorage.getItem(\"currentUserCode\")}`\r\n\t\t\t\t// console.log(myUrl);\r\n\t\t\t\tlet  response = await axios.get(myUrl);\r\n\t\t\t\t// console.log(response.data);\r\n\t\t\t\tlet sts = response.data.status;\r\n\t\t\t\t// console.log(\"Status:\", sts);\r\n\t\t\t\tsetRegisterStatus(sts);\r\n\t\t\t\tsetDisableButton(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(\"Failed\");\r\n\t\t\t\tsetRegisterStatus(1001);\r\n\t\t\t}\r\n    }\r\n    verifyCode();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleSubmit = async() => {\r\n    console.log(\"Submit command provided\");\r\n    if (true) {\r\n      //let tmp1 = encrypt(currentPassword);\r\n      let tmp2 = encrypt(newPassword);\r\n      let response = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricresetpassword/${sessionStorage.getItem(\"currentUserCode\")}/${tmp2}`);\r\n      if (response.status === 200) {\r\n\t\t\t\tsessionStorage.setItem(\"currentLogin\",\"SIGNIN\");\r\n        setTab(0);\r\n      } else {\r\n        // error\r\n        setRegisterStatus(response.status);\r\n        console.log(`Status is ${response.status}`);\r\n      }\r\n    } \r\n  }\r\n\r\n\r\n  function ShowResisterStatus() {\r\n    // console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    switch (registerStatus) {\r\n      case 0:\r\n        myMsg = ``;\r\n        break;\r\n      case 200:\r\n        myMsg = `Updated Password successfully.`;\r\n        break;\r\n      case 602:\r\n        myMsg = \"Invalid Current password\";\r\n        break;\r\n      case 611:\r\n        myMsg = \"New password cannot be same as Current Password\";\r\n      break;\r\n\t\t\tcase 1001:\r\n\t\t\tcase 1002:\r\n        myMsg = \"Invalid / Expired Link\";\r\n\t\t\tbreak; \r\n\t\t\tcase 99999:\r\n        myMsg = \"Reset link expired\";\r\n\t\t\tbreak; \r\n      default:\r\n        myMsg = \"Unknown Error\";\r\n        break;\r\n    }\r\n    return(\r\n      <Typography className={(registerStatus === 200) ? classes.root : classes.error}>{myMsg}</Typography>\r\n    )\r\n\t}\r\n\r\n\tfunction handleLogin() {\r\n    // console.log(\"Call for login here\");\r\n    // history.push(\"/signin\")\r\n    sessionStorage.setItem(\"currentLogin\", \"SIGNIN\");\r\n    cdRefresh();\r\n\r\n  }\r\n\t\r\n\tfunction handleForgot() {\r\n\t\tsessionStorage.setItem(\"currentLogin\", \"RESET\");\r\n    cdRefresh();\r\n\t}\r\n\t\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\t\t\t<CricDreamLogo /> \r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Reset Password\r\n      </Typography>\r\n      <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"New Password\"\r\n          onChange={(event) => setNewPassword(event.target.value)}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          validators={['required', 'minLength', 'noSpecialCharacters']}\r\n          errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={newPassword}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Repeat password\"\r\n          onChange={(event) => setRepeatPassword(event.target.value)}\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          validators={['isPasswordMatch', 'required']}\r\n          errorMessages={['password mismatch', 'this field is required']}\r\n          value={repeatPassword}\r\n      />\r\n      <ShowResisterStatus/>\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={(registerStatus === 0) ? gClasses.show : gClasses.hide}\r\n\t\t\t\t//disabled={disableButton}\r\n      >\r\n        Update\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n        //type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={(registerStatus !== 0) ? gClasses.show : gClasses.hide}\r\n\t\t\t\tonClick={handleForgot}\r\n\t\t\t\t//disabled={disableButton}\r\n      >\r\n        Regenrate Link\r\n\t\t\t</Button>\r\n    </ValidatorForm>\r\n    </div>\r\n    <ValidComp p1={newPassword}/>  \r\n\t\t<Typography className={classes.root}>\r\n      <Link href=\"#\" onClick={handleLogin} variant=\"body2\">\r\n        Already have an account? Sign in \r\n      </Link>\r\n    </Typography>\t\t\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState ,useContext} from 'react'; \r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\n// import { Switch, Route } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n//import { UserContext } from \"../../UserContext\";\r\n// import axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport red from '@material-ui/core/colors/red';\r\nimport { useHistory } from \"react-router-dom\";\r\n// import SignIn from \"./SignIn.js\";\r\nimport {ValidComp, BlankArea, CricDreamLogo} from \"CustomComponents/CustomComponents.js\"\r\nimport { cdRefresh, encrypt } from \"views/functions.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n  textData: {\r\n    fontSize: '14px',\r\n    margin: theme.spacing(0),\r\n  },\r\n}));\r\n\r\n/***\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n***/\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [registerStatus, setRegisterStatus] = useState(199);\r\n\r\n  // const { setUser } = useContext(UserContext);\r\n\r\n\r\n  const handleSubmit = async() => {\r\n    let tmp1 = encrypt(email); \r\n    //let response = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricemailpassword/${tmp1}`);\r\n\t\tlet response = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricemailreset/${tmp1}`);\r\n    setRegisterStatus(response.status);\r\n  }\r\n\r\n  function handleLogin() {\r\n    sessionStorage.setItem(\"currentLogin\", \"SIGNIN\");\r\n    cdRefresh();\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    let myMsg;\r\n    switch (registerStatus) {\r\n      case 199:\r\n        myMsg = ``;\r\n        break;\r\n      case 200:\r\n        myMsg = `Successfully mailed reset password link`;\r\n        break;\r\n      case 602:\r\n        myMsg = `Email not configured in database`;\r\n        break;\r\n      case 603:\r\n        myMsg = `Transport error while sending email`;\r\n        break;\r\n      default:\r\n          myMsg = \"Unknown Error\";\r\n          break;\r\n    }\r\n    return(\r\n      <div>\r\n        <Typography className={(registerStatus === 200) ? classes.root : classes.error}>{myMsg}</Typography>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <CricDreamLogo />\r\n      {/* <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar> */}\r\n      <Typography component=\"h1\" variant=\"h5\">Forgot Password.</Typography>\r\n      <br/>\r\n      <p className={classes.textData}>Forgot possword? Do not worry.</p>\r\n      <p className={classes.textData}>Password will be mailed to you</p>\r\n      <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Invalid Email', 'Email to be provided']}\r\n          value={email}\r\n      />\r\n      <ShowResisterStatus/>\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Submit\r\n    </Button>\r\n    </ValidatorForm>\r\n    <BlankArea/>\r\n    <Typography className={classes.root}>\r\n      <Link href=\"#\" onClick={handleLogin} variant=\"body2\">Already have an account? Sign in</Link>\r\n    </Typography>\r\n    </div>\r\n    <ValidComp />    \r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Table from \"components/Table/Table.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport globalStyles from \"assets/globalStyles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n//import useScript from './useScript';\r\nimport { setTab }from \"CustomComponents/CricDreamTabs\";\r\nimport { BlankArea, DisplayBalance } from 'CustomComponents/CustomComponents';\r\nimport { getMinimumBalance } from 'views/functions';\r\n// import classes from '*.module.css';\r\nvar request= require('request');\r\n// import { UserContext } from \"../../UserContext\";\r\n// import { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {validateSpecialCharacters, validateEmail, cdRefresh} from \"views/functions.js\";\r\n// import { red, deepOrange } from '@material-ui/core/colors';\r\n// var Insta = require('instamojo-nodejs');\r\n\r\n\r\n//const INSTAMOJOSCRIPT=\"https://js.instamojo.com/v1/checkout.js\";\r\nconst COUNTPERPAGE=5;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wallet : {\r\n    spacing: 0,\r\n    // border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    height: 10,\r\n    backgroundColor: '#B3E5FC',\r\n  },\r\n  bonus : {\r\n    spacing: 0,\r\n    // border: 5,\r\n    align: \"center\",\r\n    padding: \"none\",\r\n    height: 10,\r\n    backgroundColor: '#FFC0CB',\r\n  },\r\n}));\r\n  \r\n\r\nexport default function Wallet(props) {\r\n  //useScript(INSTAMOJOSCRIPT);\r\n\r\n  //const history = useHistory();\r\n  const classes = useStyles();\r\n  const gClasses = globalStyles();\r\n\r\n  const [minBalance, setMinBalance] = useState(parseInt(process.env.REACT_APP_MINBALANCE));\r\n  const [balance, setBalance] = useState({wallet: 0, bonus: 0});\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [masterTransactions, setMasterTransactions] = useState([]);\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = useState(COUNTPERPAGE);\r\n  // const [emptyRows, setEmptyRows] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [minMessage, setMinMessage] = useState(`Minimum balance of  ${process.env.REACT_APP_MINBALANCE} is required for withdrawal.`)\r\n  \r\n  // have we come via route\r\n  //console.log(\"Wallet\", localStorage.getItem(\"menuValue\"));\r\n  // console.log(\"details from Insta\",\r\n  // sessionStorage.getItem(\"payment_id\"),\r\n  // sessionStorage.getItem(\"payment_status\"),\r\n  // sessionStorage.getItem(\"payment_request_id\")\r\n  // );\r\n  useEffect(() => {\r\n\t  \r\n\tif (localStorage.getItem(\"saveBalance\"))\r\n      setBalance(JSON.parse(localStorage.getItem(\"saveBalance\")));\r\n\r\n\tif (localStorage.getItem(\"saveTransactions\")) {\r\n      setTransactions(JSON.parse(localStorage.getItem(\"saveTransactions\")));\r\n\t  setMasterTransactions(JSON.parse(localStorage.getItem(\"saveTransactions\")));\r\n\t}\r\n\t\r\n    const minimumAmount = async () => {\r\n      let amt = await getMinimumBalance();\r\n      setMinBalance(amt); \r\n      console.log(\"Min Balance \", amt);\r\n      setMinMessage(`Minimum balance of  ${amt} is required for withdrawal.`);\r\n    }\r\n    \r\n\tconst WalletInfo = async () => {\r\n      try {\r\n        // get user details\r\n        // get wallet transaction and also calculate balance\r\n        var response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/wallet/details/${localStorage.getItem(\"uid\")}`);\r\n        setTransactions(response.data);\r\n        setMasterTransactions(response.data);\r\n\t\tlocalStorage.setItem(\"saveTransactions\", JSON.stringify(response.data));\r\n\t\t\r\n        // let myempty = rowsPerPage - Math.min(rowsPerPage, response.data.length - page * rowsPerPage);\r\n        // setEmptyRows(myempty);\r\n\r\n        response = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/wallet/balance/${localStorage.getItem(\"uid\")}`);\r\n        setBalance(response.data);\r\n\t\tlocalStorage.setItem(\"saveBalance\", JSON.stringify(response.data));\r\n      } catch (e) {\r\n          console.log(e)\r\n      }\r\n    }\r\n    WalletInfo();\r\n    minimumAmount()\r\n  }, []);\r\n\r\n  function ShowResisterStatus() {\r\n    let myMsg;\r\n    let errmsg = true;\r\n    switch (registerStatus) {\r\n      case 1001:\r\n        myMsg = message;\r\n        errmsg = false;\r\n      break;\r\n      case 1002:\r\n        myMsg = message;\r\n      break;\r\n      case 0:\r\n        myMsg = ``;\r\n        errmsg = false;\r\n      break;      \r\n      default:\r\n        myMsg = `Unknown error code ${registerStatus}`;\r\n        break;\r\n    }\r\n    let myClass = (errmsg) ? gClasses.error : gClasses.nonerror;\r\n    return(\r\n      <div>\r\n        <Typography className={myClass}>{myMsg}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    event.preventDefault();\r\n    setPage(newPage);\r\n    // let myempty = rowsPerPage - Math.min(rowsPerPage, transactions.length - newPage * rowsPerPage);\r\n    // setEmptyRows(myempty);\r\n\r\n  };\r\n\r\n\r\n  function handleAddWallet() {\r\n    setTab(process.env.REACT_APP_ADDWALLET);\r\n  }\r\n\r\n  function handleWithdraw() {\r\n    if (balance.wallet <= minBalance)\r\n      alert(minMessage);\r\n    else\r\n      setTab(process.env.REACT_APP_WITHDRAWWALLET);\r\n  }\r\n\r\n\r\n  function WalletButton() {\r\n    return (\r\n      <div>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n        onClick={handleAddWallet}\r\n        className={gClasses.button}>Add to Wallet\r\n      </Button>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" \r\n       onClick={handleWithdraw}\r\n        className={gClasses.button}>Withdraw\r\n     </Button>\r\n     </div>\r\n    )\r\n  }\r\n\r\n  function allData() {\r\n    // console.log(\" All\");\r\n    setTransactions(masterTransactions);\r\n    setPage(0);\r\n  }\r\n\r\n  function walletData() {\r\n    let tmp = masterTransactions.filter(x => x.isWallet === true);\r\n    // console.log(\" Wallet\", tmp.length);\r\n    setTransactions(tmp);\r\n    setPage(0);\r\n  }\r\n\r\n  function bonusData() {\r\n    let tmp = masterTransactions.filter(x => x.isWallet === false);\r\n    // console.log(\" Bonus\", tmp.length);\r\n    setTransactions(tmp);\r\n    setPage(0);\r\n  }\r\n\r\n  function SelectButton() {\r\n  return(\r\n    <Grid key=\"walletType\" align=\"center\" container>\r\n    <Grid item xs={4} sm={4} md={4} lg={4} >\r\n    <Button key=\"mt_t20\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n    className={gClasses.button} \r\n    onClick={allData}>\r\n    All\r\n    </Button>\r\n    </Grid>\r\n    <Grid item xs={4} sm={4} md={4} lg={4} >\r\n    <Button key=\"mt_odi\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n    className={gClasses.button} \r\n    onClick={walletData}>\r\n    Wallet\r\n    </Button>\r\n    </Grid>\r\n    <Grid item xs={4} sm={4} md={4} lg={4} >\r\n    <Button key=\"mt_test\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n    className={gClasses.button} \r\n    onClick={bonusData}>\r\n    Bonus\r\n    </Button>\r\n    </Grid>\r\n    </Grid>      \r\n  )};\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <DisplayBalance wallet={balance.wallet} bonus={balance.bonus}/>\r\n      <CssBaseline />\r\n      <div className={gClasses.paper}>\r\n        {/* <Typography component=\"h1\" variant=\"h5\">Wallet Balance: {balance.wallet}</Typography>\r\n        <Typography component=\"h1\" variant=\"h5\">Bonus Balance : {balance.bonus}</Typography> */}\r\n        <ShowResisterStatus />\r\n        <BlankArea />\r\n        <SelectButton/>\r\n        <TableContainer>\r\n        <Table>\r\n        <TableHead p={0}>\r\n            <TableRow align=\"center\">\r\n            <TableCell className={gClasses.th} p={0} align=\"center\">Date</TableCell>      \r\n            <TableCell className={gClasses.th} p={0} align=\"center\">Type</TableCell>\r\n            <TableCell className={gClasses.th} p={0} align=\"center\">Amount</TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n        < TableBody>\r\n            {transactions.slice(page * rowsPerPage, (page + 1) * rowsPerPage )\r\n            .map( (item, index) => {\r\n              let myClass = (item.isWallet) ? classes.wallet : classes.bonus;\r\n              // console.log(item.isWallet);\r\n              return (\r\n                <TableRow key={index}>\r\n                  <TableCell  className={myClass} p={0} align=\"center\" >\r\n                    {item.date}\r\n                  </TableCell>\r\n                  <TableCell  className={myClass} p={0} align=\"center\" >\r\n                    {item.type}\r\n                  </TableCell>\r\n                  <TableCell  className={myClass} p={0} align=\"center\" >\r\n                    {item.amount}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n        </TableBody> \r\n        </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[COUNTPERPAGE]}\r\n          component=\"div\"\r\n          count={transactions.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <BlankArea />\r\n        <WalletButton />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { UserContext } from \"./UserContext\";\r\n//import Admin from \"layouts/Admin.js\";\r\nimport \"assets/css/material-dashboard-react.css?v=1.9.0\";\r\n// import { DesktopWindows } from \"@material-ui/icons\";\r\nimport { CricDreamTabs, setTab }from \"CustomComponents/CricDreamTabs\"\r\nimport axios from \"axios\";\r\nimport SignIn from \"views/Login/SignIn.js\";\r\nimport SignUp from \"views/Login/SignUp.js\";\r\nimport Welcome from \"views/APL/Welcome\";\r\nimport ResetPassword from \"views/Login/ResetPassword\";\r\n//import JoinGroup from \"views/Group/JoinGroup.js\"\r\nimport ForgotPassword from \"views/Login/ForgotPassword.js\";\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { setIdle }from \"views/functions.js\"\r\nimport Wallet from \"views/Wallet/Wallet\";\r\nimport { PinDropSharp } from \"@material-ui/icons\";\r\nimport firebase from 'firebase';\r\n//import arunfb from 'firebase';\r\n\r\n//const arunfb = require('firebase/app').default\r\n//import messaging from 'firebase/messaging';\r\n\r\nimport { \r\nisMobile, cdRefresh, specialSetPos, \r\nencrypt, \r\nclearBackupData, downloadApk \r\n} from \"views/functions.js\"\r\n\r\n\r\n\r\nconst hist = createBrowserHistory();\r\n\r\n\r\nfunction checkJoinGroup(pathArray) {\r\n  let sts = false;\r\n  if ((pathArray[1].toLowerCase() === \"joingroup\") && (pathArray.length === 3) && (pathArray[2].length > 0)) {\r\n    localStorage.setItem(\"joinGroupCode\", pathArray[2]);\r\n    sts = true;\r\n  }\r\n  return sts;\r\n}\r\n\r\nfunction initCdParams() {\r\n  localStorage.setItem(\"joinGroupCode\", \"\");\r\n  let ipos = 0;\r\n  if ((localStorage.getItem(\"tabpos\") !== null) &&\r\n  (localStorage.getItem(\"tabpos\") !== \"\") ) {\r\n    ipos = parseInt(localStorage.getItem(\"tabpos\"));\r\n    if (ipos >= process.env.REACT_APP_BASEPOS) localStorage.setItem(\"tabpos\", ipos-process.env.REACT_APP_BASEPOS);\r\n  } else\r\n    localStorage.setItem(\"tabpos\", 0);\r\n  console.log(`ipos: ${ipos}   Tabpos ${localStorage.getItem(\"tabpos\")}`)\r\n}\r\n\r\nfunction isUserLogged() {\r\n  console.log(\"User is\", localStorage.getItem(\"uid\"));\r\n  if ((localStorage.getItem(\"uid\") === \"\") || \r\n      (localStorage.getItem(\"uid\") === \"0\") ||\r\n      (localStorage.getItem(\"uid\") === null))\r\n    return false;\r\n  else\r\n    return true;\r\n}\r\n\r\nfunction checkResetPasswordRequest() {\r\n\tlet resetLink = \"\";\r\n\tlet x = location.pathname.split(\"/\");\r\n  console.log(\"Path is\");\r\n  console.log(x);\r\n\tif (x.length >= 4)\r\n\tif (x[1] === \"aplmaster\")\r\n\tif (x[2] === \"resetpasswordconfirm\") {\r\n\t\tresetLink = x[3];\r\n\t}\r\n\treturn resetLink;\r\n}\r\n\r\n\r\nfunction AppRouter() {\r\n  //let history={hist}\r\n\t\r\n  const [user, setUser] = useState(null);\r\n\tconst [fireToken, setFireToken] = useState(\"\");\r\n\t\r\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\r\n  var idleTimer = null;\r\n  \r\n  // console.log(`000. User is ${localStorage.getItem(\"uid\")}`)\r\n  \r\n  async function handleOnActive (event) {\r\n    // console.log('user is active', event);\r\n  }\r\n\r\n  async function handleOnAction (event) {\r\n    // console.log(`Action from user ${sessionStorage.getItem(\"uid\")}`);\r\n  }\r\n\r\n\r\n  async function handleOnIdle (event) {\r\n    // console.log('user is idle', event);\r\n    // console.log('last active', idleTimer.getLastActiveTime());\r\n    setIdle(true);\r\n  }\r\n\r\n\r\n\r\n  function DispayTabs() {\r\n    let isLogged = isUserLogged();\r\n    // console.log(\"Login status\", isLogged)\r\n    if (true) {\r\n      return (\r\n        <div>\r\n          <CricDreamTabs/>\r\n        </div>\r\n      )  \r\n    } else {\r\n      //console.log(\"New login requested\");\r\n      if (sessionStorage.getItem(\"currentLogin\") === \"SIGNUP\")\r\n        return (<SignUp/>)\r\n      else if (sessionStorage.getItem(\"currentLogin\") === \"RESET\")\r\n        return (<ForgotPassword/>);\r\n      else if (sessionStorage.getItem(\"currentLogin\") === \"SIGNIN\")\r\n        return (<SignIn/>)\r\n      else {\r\n\t\t\t\tlet userId = checkResetPasswordRequest();\r\n\t\t\t\tif (userId !== \"\") {\r\n\t\t\t\t\tsessionStorage.setItem(\"currentUserCode\", userId);\r\n\t\t\t\t\thist.push(\"/\");\r\n\t\t\t\t\t//console.log(history, hist);\r\n\t\t\t\t\treturn (<ResetPassword />);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (<Welcome/>)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n\r\n  initCdParams();\r\n\r\n  let mypath = window.location.pathname.split(\"/\");\r\n  if (checkJoinGroup(mypath)) {\r\n    //console.log(\"join group found\");\r\n    localStorage.setItem(\"tabpos\", 105);\r\n    //history.push(\"/\")\r\n  } \r\n\r\n\r\n\r\nif (process.env.REACT_APP_DEVICE === \"WEB\") {\r\n\tconst config ={\r\n\t\tapiKey: \"AIzaSyBqJAEVFJOsrztnMrIqO0tfGmisU95Plrk\",\r\n\t\tauthDomain: \"aplclient.firebaseapp.com\",\r\n\t\tprojectId: \"aplclient\",\r\n\t\tstorageBucket: \"aplclient.appspot.com\",\r\n\t\tmessagingSenderId: \"1018469539659\",\r\n\t\tappId: \"1:1018469539659:web:102ea6f8c5cf39dda9d2ce\",\r\n\t\tmeasurementId: \"G-4RN59HCLKD\"\r\n\t}\r\n\tfirebase.initializeApp(config);\r\n\t\r\n\tconst messaging = firebase.messaging();\r\n\t  // get the FIREBASE token and save it. We will send it to server in Home page\r\n    messaging.requestPermission().then(()=>{\r\n      return messaging.getToken()\r\n    }).then(token=> {\r\n      console.log('Token : ',token);\r\n\t\t\tlocalStorage.setItem(\"token\", token);\r\n\t\t\tconsole.log(\"Done\");\r\n    }).catch((err)=>{\r\n      console.log(err); \r\n\t  })\r\n\r\n\t\t/*\r\n    messaging.onMessage((payload) => {\r\n      console.log('Message received. ', payload);\r\n      // ...\r\n    }); \r\n\r\n    messaging.onBackgroundMessage(function(payload){\r\n      console.log(\"onBackgroundMessage:\",payload);\r\n    });\r\n\t\t*/\r\n  }\r\n\r\n\r\n  return (\r\n    <Router history={hist}> \r\n    <UserContext.Provider value={value}>\r\n    {/* <Route path=\"/apl/walletdetails\" component={Dummy} /> */}\r\n    {/* <Route path=\"/apl/walletadd\" component={Dummy} /> */}\r\n    </UserContext.Provider>\r\n    <DispayTabs />\r\n    </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default AppRouter;\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.9.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.TOP_CENTER,\r\n  timeout: 2500,\r\n  offset: '30px',\r\n\twidth: 'auto',\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE\r\n};\r\n\r\n\r\nReactDOM.render(<AlertProvider template={AlertTemplate} {...options}> <App /> </AlertProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}